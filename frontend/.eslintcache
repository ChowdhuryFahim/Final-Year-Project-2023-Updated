[{"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\index.js":"1","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\store.js":"2","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\App.js":"3","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\reducers\\cartReducers.js":"6","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\reducers\\userReducers.js":"7","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\reducers\\orderReducers.js":"8","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\reducers\\contactReducer.js":"9","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Header.js":"10","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Footer.js":"11","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\HomeScreen.js":"12","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Header2.js":"13","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ProductScreen.js":"14","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\CartScreen.js":"15","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\RegisterScreen.js":"16","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\LoginScreen.js":"17","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ShippingScreen.js":"18","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\PaymentScreen.js":"19","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ProfileScreen.js":"20","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\OrderScreen.js":"21","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\PlaceOrderScreen.js":"22","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\UserListScreen.js":"23","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ProductListScreen.js":"24","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\UserEditScreen.js":"25","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\OrderListScreen.js":"26","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\TopReviewProductScreen.js":"27","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\PricePredict.js":"28","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\CompareScreen.js":"29","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\PriceRangeScreen.js":"30","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\DashboardScreen.js":"31","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ContactScreen.js":"32","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\RegisterScreen2.js":"33","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\OTPScreen.js":"34","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ProductEditScreen.js":"35","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ResetPassword.js":"36","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\AdminContactScreen.js":"37","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\BrandScreen.js":"38","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\SearchBox.js":"39","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Loader.js":"40","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Product.js":"41","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Message.js":"42","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\ProductOffer2.js":"43","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Paginate.js":"44","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\ProductOffer.js":"45","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Navs2.js":"46","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Navs.js":"47","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\CompareProduct.js":"48","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\ProductCarousel.js":"49","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\SearchRam.js":"50","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Coupon.js":"51","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\SearchSlider.js":"52","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\SearchBrand.js":"53","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\CoinTable.js":"54","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\FormContainer.js":"55","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\ProductCompareChart.js":"56","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\constants\\productConstants.js":"57","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\constants\\userConstants.js":"58","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\constants\\cartConstants.js":"59","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\constants\\contactConstants.js":"60","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\constants\\orderConstants.js":"61","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\actions\\userActions.js":"62","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\actions\\productActions.js":"63","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\admin_components\\AdminSideBar.js":"64","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\admin_components\\Todolist.js":"65","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\admin_components\\PieCharts.js":"66","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\actions\\orderActions.js":"67","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Rating.js":"68","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\CheckoutSteps.js":"69","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\actions\\cartActions.js":"70","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\ProductChart.js":"71"},{"size":595,"mtime":1675540727055,"results":"72","hashOfConfig":"73"},{"size":2672,"mtime":1675540727158,"results":"74","hashOfConfig":"73"},{"size":3553,"mtime":1675540726904,"results":"75","hashOfConfig":"73"},{"size":362,"mtime":1675540727132,"results":"76","hashOfConfig":"73"},{"size":5547,"mtime":1675540728281,"results":"77","hashOfConfig":"73"},{"size":1486,"mtime":1675540728208,"results":"78","hashOfConfig":"73"},{"size":3973,"mtime":1675540728303,"results":"79","hashOfConfig":"73"},{"size":4079,"mtime":1675540728255,"results":"80","hashOfConfig":"73"},{"size":635,"mtime":1675540728231,"results":"81","hashOfConfig":"73"},{"size":4147,"mtime":1675631262830,"results":"82","hashOfConfig":"73"},{"size":1968,"mtime":1675540727513,"results":"83","hashOfConfig":"73"},{"size":3672,"mtime":1675629018788,"results":"84","hashOfConfig":"73"},{"size":2862,"mtime":1675540727591,"results":"85","hashOfConfig":"73"},{"size":18893,"mtime":1675672151363,"results":"86","hashOfConfig":"73"},{"size":5690,"mtime":1675540728383,"results":"87","hashOfConfig":"73"},{"size":4534,"mtime":1675540728826,"results":"88","hashOfConfig":"73"},{"size":3546,"mtime":1675540728517,"results":"89","hashOfConfig":"73"},{"size":3176,"mtime":1675540728903,"results":"90","hashOfConfig":"73"},{"size":1778,"mtime":1675540728617,"results":"91","hashOfConfig":"73"},{"size":7667,"mtime":1675671910549,"results":"92","hashOfConfig":"73"},{"size":10047,"mtime":1675672284459,"results":"93","hashOfConfig":"73"},{"size":11838,"mtime":1675540728645,"results":"94","hashOfConfig":"73"},{"size":3812,"mtime":1675540728988,"results":"95","hashOfConfig":"73"},{"size":5361,"mtime":1675540728748,"results":"96","hashOfConfig":"73"},{"size":4104,"mtime":1675630791255,"results":"97","hashOfConfig":"73"},{"size":3835,"mtime":1675540728567,"results":"98","hashOfConfig":"73"},{"size":1702,"mtime":1675540728929,"results":"99","hashOfConfig":"73"},{"size":20566,"mtime":1675540728672,"results":"100","hashOfConfig":"73"},{"size":6767,"mtime":1675540728412,"results":"101","hashOfConfig":"73"},{"size":1993,"mtime":1675540728697,"results":"102","hashOfConfig":"73"},{"size":4292,"mtime":1675540728467,"results":"103","hashOfConfig":"73"},{"size":1740,"mtime":1675665482388,"results":"104","hashOfConfig":"73"},{"size":5712,"mtime":1675540728850,"results":"105","hashOfConfig":"73"},{"size":2551,"mtime":1675540728543,"results":"106","hashOfConfig":"73"},{"size":19673,"mtime":1675540728723,"results":"107","hashOfConfig":"73"},{"size":2014,"mtime":1675540728877,"results":"108","hashOfConfig":"73"},{"size":3268,"mtime":1675540728333,"results":"109","hashOfConfig":"73"},{"size":2545,"mtime":1675540728358,"results":"110","hashOfConfig":"73"},{"size":1138,"mtime":1675540727925,"results":"111","hashOfConfig":"73"},{"size":414,"mtime":1675540727614,"results":"112","hashOfConfig":"73"},{"size":1519,"mtime":1675540727746,"results":"113","hashOfConfig":"73"},{"size":228,"mtime":1675540727643,"results":"114","hashOfConfig":"73"},{"size":1716,"mtime":1675540727872,"results":"115","hashOfConfig":"73"},{"size":859,"mtime":1675540727718,"results":"116","hashOfConfig":"73"},{"size":1642,"mtime":1675540727847,"results":"117","hashOfConfig":"73"},{"size":3554,"mtime":1675540727692,"results":"118","hashOfConfig":"73"},{"size":1465,"mtime":1675540727668,"results":"119","hashOfConfig":"73"},{"size":3479,"mtime":1675540727460,"results":"120","hashOfConfig":"73"},{"size":1436,"mtime":1675540727772,"results":"121","hashOfConfig":"73"},{"size":1993,"mtime":1675540727975,"results":"122","hashOfConfig":"73"},{"size":1560,"mtime":1675540727484,"results":"123","hashOfConfig":"73"},{"size":670,"mtime":1675540727999,"results":"124","hashOfConfig":"73"},{"size":1985,"mtime":1675540727950,"results":"125","hashOfConfig":"73"},{"size":776,"mtime":1675540727433,"results":"126","hashOfConfig":"73"},{"size":378,"mtime":1675540727541,"results":"127","hashOfConfig":"73"},{"size":1856,"mtime":1675540727822,"results":"128","hashOfConfig":"73"},{"size":1868,"mtime":1675540728155,"results":"129","hashOfConfig":"73"},{"size":1481,"mtime":1675540728178,"results":"130","hashOfConfig":"73"},{"size":287,"mtime":1675540728078,"results":"131","hashOfConfig":"73"},{"size":362,"mtime":1675540728101,"results":"132","hashOfConfig":"73"},{"size":1240,"mtime":1675540728129,"results":"133","hashOfConfig":"73"},{"size":7345,"mtime":1675540727294,"results":"134","hashOfConfig":"73"},{"size":7186,"mtime":1675540727268,"results":"135","hashOfConfig":"73"},{"size":3887,"mtime":1675540727324,"results":"136","hashOfConfig":"73"},{"size":2313,"mtime":1675540727375,"results":"137","hashOfConfig":"73"},{"size":564,"mtime":1675540727349,"results":"138","hashOfConfig":"73"},{"size":6009,"mtime":1675540727241,"results":"139","hashOfConfig":"73"},{"size":1886,"mtime":1675540727900,"results":"140","hashOfConfig":"73"},{"size":1593,"mtime":1675540727407,"results":"141","hashOfConfig":"73"},{"size":1479,"mtime":1675540727184,"results":"142","hashOfConfig":"73"},{"size":1660,"mtime":1675540727797,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"1nvjp1p",{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"146"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"146"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"146"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"146"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"146"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"146"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"146"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"146"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"146"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"146"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"146"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"146"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"146"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"146"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"146"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"146"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"146"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"146"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"146"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"146"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"146"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"146"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"146"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"146"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"146"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"146"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"146"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"146"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"146"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"146"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"146"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"146"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"146"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"146"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"146"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"146"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"146"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"146"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"146"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"146"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"328"},"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\index.js",[],["329","330"],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\store.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\App.js",["331","332"],"import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport PricePredict from './screens/PricePredict'\nimport TopReviewProductScreen from './screens/TopReviewProductScreen'\nimport Contact from './screens/ContactScreen'\nimport CompareScreen from './screens/CompareScreen'\nimport PriceRangeScreen from './screens/PriceRangeScreen'\nimport DashboardScreen from './screens/DashboardScreen'\nimport Header2 from './components/Header2';\nimport OTPScreen from './screens/OTPScreen';\nimport RegisterScreen2 from './screens/RegisterScreen2'\nimport ResetPassword from './screens/ResetPassword';\nimport AdminContactScreen from './screens/AdminContactScreen';\nimport BrandScreen from './screens/BrandScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <br></br>\n\n\n      <main className=\"py-3 mt-5 \">\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n        <Route path='/register2' component={RegisterScreen2} />\n        <Route path='/reset_password' component={ResetPassword} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/otp_screen' component={OTPScreen} />  \n          <Route path='/compare' component={CompareScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/pricePredict' component={PricePredict} />\n          <Route path='/topReviewProductScreen' component={TopReviewProductScreen}/>\n          <Route path='/contact' component={Contact}/>\n          <Route path='/priceRange' component={PriceRangeScreen} />\n          <Route path='/dashboard' component={DashboardScreen} />\n        <Route path='/admin/contact' component={AdminContactScreen} />\n        <Route path=\"/brand\" component={BrandScreen} />\n          \n      \n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\reducers\\contactReducer.js",["333","334","335"],"import {\n    CONTACT_LIST_REQUEST,\n    CONTACT_LIST_SUCCESS,\n    CONTACT_LIST_FAIL,\n\n    CONTACT_CREATE_REQUEST,\n    CONTACT_CREATE_SUCCESS,\n    CONTACT_CREATE_FAIL,\n\n\n} from '../constants/contactConstants';\n\n\nexport const contactCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONTACT_CREATE_REQUEST:\n            return { loading: true }\n\n        case CONTACT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case CONTACT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Header.js",["336","337","338"],"import {React, useEffect, useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\nimport './style.css';\n\nfunction Header({ match, history }) {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n  \n    \n\n    return (\n        <header>\n            <Navbar className=\"navbar-dark bg-dark pt-1 pb-1 shadow\" expand=\"lg\" fixed=\"top\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        \n                        <Navbar.Brand className=\"mr-0 mr-md-4\">\n\n                            <div>\n                                <div className=\"text-center \" > <i class=\"fas fa-laptop-house\"></i></div>\n                                <div className=\"text-center\">\n\n\n                                    <span class=\"text-info \"> <b>L</b></span><span className=\"text-danger\">a</span>\n                                <span className=\"text-success\">p</span>\n                                <span className=\"text-warning\">t</span>op S\n\n                                </div>\n                            </div>\n                        \n                        \n                        \n                        \n                        \n                        </Navbar.Brand>\n                    </LinkContainer>\n\n                    {\n                        userInfo && userInfo.isAdmin ? null :<>\n                        <LinkContainer to='/cart' className=\"text-white active mr-0 mr-md-4\">\n                        <Nav.Link><i className=\"fas fa-shopping-cart ct\"></i> cart <span class=\"badge badge-warning ct3\">{cartItems.length > 0 ? ( cartItems.reduce((acc, item) => acc + item.qty, 0) ) : null}</span></Nav.Link>\n                    </LinkContainer>\n                        </>\n                    }\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox/>\n                        <Nav className=\"ml-auto\">\n                           \n                           \n                            {userInfo ? (\n            \n                                    <NavDropdown title={userInfo.name} id='username' className=\"active\">\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                                \n                            ) : (<>\n        \n                                    <LinkContainer to='/register2'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Register A Account </Nav.Link>\n                                    </LinkContainer>\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                    </LinkContainer>\n                                </>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <>\n                                <LinkContainer to='/dashboard'>\n                                        <Nav.Link>Dashboard</Nav.Link>\n                                 </LinkContainer>\n                                </>\n                    \n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Footer.js",["339"],"import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nfunction Footer() {\n    return (\n        <footer>\n                <Row className=\"bg-dark text-white p-4 mt-5\">\n                    <Col md={4}>\n\n                        <h4 className=\"text-white\">Links</h4>\n                        <Link to=\"/\" className=\"text-white\">About</Link>\n                        <p>Predict</p>\n                        <p>Top product</p>\n\n                    </Col>\n                    <Col md={4}>\n                        <h5 className=\"text-white\">Our Address</h5>\n                        <address>\n                            121, Zindabazar Road<br></br>\n                            Sylhet, Bangladesh<br></br>\n                            HONG KONG<br></br>\n                            <i class=\"fa fa-phone\"></i>: +852 1234 5678<br></br>\n                            <i class=\"fa fa-fax\"></i>: +852 8765 4321<br></br>\n                            <i class=\"fa fa-envelope\"></i>:\n                            <a href=\"mailto:caaziz9642@gmail.com\" className=\"text-white\">aaziz9642@gmail.com</a>\n                        </address>\n\n                    </Col>\n                    <Col><i class=\"fab fa-facebook-square ct2\"></i>\n                        <i class=\"fab fa-twitter-square ml-2 ct2\"></i>\n                        <i class=\"fab fa-google-plus ml-2 ct2\"></i>\n                        <i class=\"fab fa-instagram-square ml-2 ct2\"></i>\n                        <i class=\"fab fa-youtube ml-2 ct2\"></i>\n                        <i class=\"fab fa-linkedin ml-2 ct2\"></i>\n                        <i class=\"fas fa-envelope ml-2 ct2\"></i>\n                    </Col>\n                    \n                </Row>\n                <Row className=\"bg-dark text-white\">\n                    <Col className=\"text-center py-3\">Copyright &copy; Laptop Store</Col>\n                </Row>\n     \n        </footer>\n    )\n}\n\nexport default Footer\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\HomeScreen.js",["340","341","342","343","344","345","346","347","348","349","350"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Container, Form, ListGroup } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, listCoupons } from '../actions/productActions'\nimport ProductOffer from '../components/ProductOffer'\nimport ProductOffer2 from '../components/ProductOffer2'\nimport Navs from '../components/Navs'\nimport Navs2 from '../components/Navs2'\nimport CompareProduct from '../components/CompareProduct'\nimport ProductCarousel from '../components/ProductCarousel'\nimport SearchRAM from '../components/SearchRam'\nimport Coupon from '../components/Coupon'\nimport SearchSlider from '../components/SearchSlider'\nimport CoinTable from '../components/CoinTable'\nimport SearchBrand from '../components/SearchBrand'\n\n\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n\n\n    const { error, loading, products, page, pages } = productList\n\n    let keyword = history.location.search\n    let flag;\n    if (keyword) {\n        flag = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            {\n                flag ? null :\n                    <>\n                        <div className=\"large-devices-margin\">\n\n                            <Coupon />\n\n                            <Row>\n                                <Col md={9}>\n                                    <ProductOffer2 />\n                                </Col>\n                                <Col md={3}>\n                                    <CompareProduct />\n                                    <hr></hr>\n                                    {/* <CoinTable/> */}\n                                </Col>\n\n                            </Row>\n\n                        </div>\n\n                        <Navs2 />\n                        <br></br>\n                        <Navs />\n                    </>\n            }\n            <div className=\"large-devices-margin\">\n\n\n                {\n                    flag ? <h4 className=\"mt-2\">Search Results</h4> : <h4 className=\"mt-2\">Latest Laptops</h4>\n                }\n                {loading ? <Loader />\n                    : error ? <Message variant='danger'>{error}</Message>\n                        :\n                        <div className=\"pr-md-5 pl-md-5 pt-3\">\n                            <Row>\n                                {/* <Col md={2}>\n                                    <SearchRAM />\n                                    <hr></hr>\n                                    <SearchBrand />\n\n                                </Col> */}\n                                <Col md={12}>\n\n\n                                    <Row>\n\n                                        {products.map(product => (\n                                            <Col key={product._id} sm={12} md={6} lg={4} xl={3} >\n                                                <Product product={product} />\n                                            </Col>\n                                        ))}\n                                    </Row>\n                                    <Paginate page={page} pages={pages} keyword={keyword} />\n                                </Col>\n                            </Row>\n\n                        </div>\n                }\n\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default HomeScreen\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Header2.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ProductScreen.js",["351","352","353","354","355","356","357","358","359"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Modal } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\nimport ReactImageMagnify from 'react-image-magnify';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport Coupon from '../components/Coupon';\nimport axios from 'axios';\nimport ProductChart from '../components/ProductChart';\n\nconst baseURL = \"http://127.0.0.1:8000/api/products/predict_history_price/\";\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n    const [show, setShow] = useState(false);\n    const [date, setDate] = useState(null)\n    const [predictPrice, setPredict_price] = useState(null);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n   \n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product, price_history } = productDetails\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    const product_id = product._id;\n   \n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        console.log(\"product Ids\", match.params.id)\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n    console.log(\"price : \", price_history);\n    const predict_future_price_submit = (e) =>{\n        e.preventDefault()\n        if(product._id && date)\n        {   \n            console.log(\"hello\", product_id, date)\n            axios.post(baseURL, {\n                date,\n                product_id\n\n            }).then((response)=>{\n                setPredict_price(response.data);\n            })\n        }\n    \n\n    }\n\n    return (\n        <div className=\"large-devices-margin\">\n            \n          \n        <Coupon />\n               \n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    \n                                    <Carousel autoPlay=\"true\" infiniteLoop=\"true\" interval=\"1000\" stopOnHover=\"true\" >\n\n                                            <div >\n                                                <img src={product.image} />\n                                            </div>\n                                        <div >\n                                            <img src={product.image2} />\n                                        </div>\n                                        <div >\n                                            <img src={product.image3} />\n                                            \n                                        </div>\n\n                                   \n\n                                    </Carousel>\n                                    <Card className=\"p-2 mt-4 border border-white\">\n                                        <div>Description: {ReactHtmlParser(product.description)}</div>\n                                    </Card>\n                                    <diV className=\"mt-5 mb-5\">\n\n                                    </diV>\n                                    <ProductChart price_history={price_history}  product_id={product._id}/>\n                                    <diV className=\"mt-5 mb-5\">\n\n                                    </diV>\n                                </Col>\n\n\n                                <Col md={4}>\n                                   \n                                    <ListGroup variant=\"primary\">\n                                    <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <span className=\"h3\">&#2547;{product.is_offer ? product.price - ((product.price * product.offer_percentage) / 100) : product.price}</span>\n                                            <br></br><span class=\"text-tl\">{product.is_offer ? '৳' + product.price : null}</span> <b>{product.is_offer ? '-' + product.offer_percentage + '%' : <br></br>}</b>\n                                        <br></br>\n\n\n                                            <Button variant=\"primary\" size=\"sm\" className=\"mt-2\" onClick={handleShow}>\n                                                predict future price\n                                            </Button>\n\n                                            <Modal show={show} onHide={handleClose}>\n                                                <Modal.Header className=\"bg-dark\" closeButton>\n                                                    <Modal.Title className=\"text-white\">Predict future price of {product.name}</Modal.Title>\n                                                </Modal.Header>\n                                                <Modal.Body>\n                                                    <span >enter the date where you can predict the price of this laptop</span>\n                                                    <Form onSubmit={predict_future_price_submit}>\n                                                    <Form.Control type=\"date\" size=\"sm\" className=\"mb-2 mt-2\" name=\"date\" onChange={(e)=>{setDate(e.target.value)}}/>\n                                                        <h3>{predictPrice ? 'Predict Price : ' + parseFloat(predictPrice).toFixed(2) : null}</h3>\n                                                    <Button type=\"submit\" size=\"sm\" className=\"mt-3\">Predict</Button>\n                                                    </Form>\n                                                </Modal.Body>\n                                                <Modal.Footer>\n                    \n                                                </Modal.Footer>\n                                            </Modal>\n                                      \n\n\n\n\n\n\n                                        </ListGroup.Item>\n\n                                       \n                                    \n\n                                        <ListGroup.Item>\n                                            <p>Model: {product.model}</p>\n                                            <hr></hr>\n                                            <p>Category: {product.category}</p>\n                                            <hr></hr>\n                                            <p>Processor: {product.processor}</p>\n                                            <hr></hr>\n                                            <p>Display: {product.display}</p>\n                                            <hr></hr>\n                                            <p>Graphics: {product.graphics_card}</p>\n                                            <hr></hr>\n                                            <p>Ram: {product.ram_memory}</p>\n                                            <hr></hr>\n                                            <p>OS: {product.operating_system}</p>\n                                            <hr></hr>\n                                            <p>Storage: {product.storage}</p>\n                                            <hr></hr>\n                                            <p>Web Cam: {product.web_cam}</p>\n                                            <hr></hr>\n                                            <p> Color: {product.color}</p>\n                                            <hr></hr>\n                                            <p>Battery: {product.battery}</p>\n                                            <hr></hr>\n                                            <p>Weight: {product.weight}</p>\n                                            <hr></hr>\n                                            <p>Warranty: {product.warranty}</p>\n                                            <hr></hr>\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                   \n                                </Col>\n\n                           \n\n\n                                <Col md={2}>\n                                   {\n                                   userInfo && userInfo.isAdmin ? null :\n                                \n                                    <>\n                                     <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>৳ {product.price}</strong>\n                                \n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        \n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    size=\"sm\"\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                    </>\n                                   }\n                                  \n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                   \n                                    <Card className=\"p-2 border border-white\">\n                                    <h4>Reviews</h4>\n                                    {product.reviews.length === 0 && <Message variant='info' size=\"sm\">No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                            size=\"sm\"\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                            size=\"sm\"\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                        size=\"sm\"\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message size=\"sm\" variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                    </Card>\n                                    <Link to='/'  className='btn btn-primary my-3 btn-sm'>Go Back</Link>  \n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\RegisterScreen.js",["360"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [mobile, setMobile] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password, mobile))\n        }\n\n    }\n\n    return (\n       \n        <FormContainer>\n            <div className=\"card p-3\">\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                    <Form.Group controlId='mobile'>\n                        <Form.Label>Mobile</Form.Label>\n                        <Form.Control\n                            required\n                            type='text'\n                            placeholder='019*******'\n                            value={mobile}\n                            onChange={(e) => setMobile(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n            </div>\n        </FormContainer >\n\n    )\n}\n\nexport default RegisterScreen;\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\LoginScreen.js",["361"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n\n        <Row >\n            <Col md={3}>\n            </Col>\n            <Col>\n                <div className=\"card\">\n                <FormContainer >\n                    <h1>Sign In</h1>\n                    {error && <Message variant='danger'>{error}</Message>}\n                    {loading && <Loader />}\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                size=\"sm\"\n                                type='email'\n                                placeholder='Enter Email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                size=\"sm\"\n                                type='password'\n                                placeholder='Enter Password'\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button size=\"sm\" type='submit' variant='primary' className=\"btn-block\">\n                            Sign In\n                        </Button>\n                    </Form>\n\n                    <Row className='py-3'>\n                        <Col>\n                            New Customer? <Link\n                                to={redirect ? `/register2?redirect=${redirect}` : '/register2'}>\n                                Register\n                            </Link>\n                            \n                        </Col>\n                        <Col>\n                            Recover your account <Link\n                                to={redirect ? `/reset_password?redirect=${redirect}` : '/reset_password'}>\n                                reset password\n                            </Link>\n\n                        </Col>\n                    </Row>\n\n                </FormContainer>\n                </div>\n\n            </Col>\n            <Col md={3}>\n            </Col>\n        </Row>\n        \n      \n    )\n}\n\nexport default LoginScreen\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ShippingScreen.js",["362"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\PaymentScreen.js",["363","364"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col, Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <div className=\"large-devices-margin\">\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n        </div>\n    )\n}\n\nexport default PaymentScreen\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ProfileScreen.js",["365","366","367","368"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table, Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\nimport axios from 'axios'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n    const [userCoins, setUserCoins] = useState(0);\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n\n            axios.get(`http://127.0.0.1:8000/api/users/coin/${userInfo._id}`).then(res => {\n                setUserCoins(res.data);\n            })\n\n\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n        \n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <div className=\"large-devices-margin\">\n        <Row>\n            {/* <Col md={2}>\n                    <h1><i class=\"fas fa-coins\"></i> Coins</h1>\n                    <h2 className=\"text-white text-center bg-danger\">{userCoins > 0 ? userCoins : \"You got no coin yet!\"}</h2>\n            </Col> */}\n            <Col md={3}>\n                <h2 >User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            size=\"sm\"\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            disabled\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                                size=\"sm\"\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                                size=\"sm\"\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                                size=\"sm\"\n                        >\n                        </Form.Control>\n\n                    </Form.Group>\n                       \n\n                        <Button type='submit' variant='primary' size=\"sm\">\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={7}>\n              {\n                userInfo && userInfo.isAdmin ? null : \n                <>\n                  <h2 >My Recent Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n                </>\n              }\n            </Col>\n        </Row>\n        </div>\n    )\n}\n\nexport default ProfileScreen","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\OrderScreen.js",["369"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    \n    \n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AaWJwzedvXZmPeLBc_dtrpWl3QO__vpH1IX8zHVijOp1aWEGjOgt1QRfvON16MKBKFlthBE1WthFY4ur'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n\n            history.push('/login')\n           \n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (order && !order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver,userInfo])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div className=\"large-devices-margin\">\n                    <h1 className=\"text-white\">Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                   \n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={Number(order.totalPrice)}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\PlaceOrderScreen.js",["370","371","372","373","374","375","376","377"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport { Button, Row, Col, ListGroup, Image, Card, InputGroup, FormControl, Form, ButtonGroup } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const [coupon_code, setCoupon_code] = useState('')\n    const [coupon_code_status, setCoupon_code_status] = useState(0)\n    const [user_id, setUser_id] = useState()\n    const [total_discount, setTotal_discount] = useState(0)\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n    const [count, setCount] = useState(0);\n    const [coinPrice, setCoinPrice] =  useState(0);\n    const [userCoins, setUserCoins] = useState(0);\n    const [leftCoins, setLeftCoins] = useState(0);\n    const [coupon_id, setCoupon_id] = useState(0);\n\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + (item.offer_percentage ? parseFloat(item.price - ((item.price * item.offer_percentage) / 100)).toFixed(2) : item.price) * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.050) * cart.itemsPrice).toFixed(2)\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2) - total_discount - (count * 10);\n    useEffect(() => {\n        setUser_id(userInfo._id);\n        axios.get(`http://127.0.0.1:8000/api/users/coin/${userInfo._id}`).then(res => {\n            setUserCoins(res.data);\n        },[userCoins])\n     \n    })\n  \n\n    const getCoouponCodeStatus = () =>{\n        \n        try{\n        axios.post(`/api/products/coupon_check/`, {user_id, coupon_code}).then(res =>{\n            console.log(\"res--->>>\", res.data.status)\n            console.log(\"Discount --->>>>>\", res.data.total_discount)\n            setCoupon_code_status(res.data.status);\n            setTotal_discount(res.data.total_discount);\n            setCoupon_id(res.data.coupon_id)\n        })\n    }\n    catch(erro)\n    {\n        console.log(error)\n    }\n    }\n\n    const coupon_discount = (\n        <ListGroup.Item>\n            <Row>\n                <Col>Total Discount:</Col>\n                <Col>&#2547;{total_discount}</Col>\n            </Row>\n        </ListGroup.Item>\n    );\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        \n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [[success, history]])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n            left_coins: leftCoins,\n            coupon_id: coupon_id\n        }))\n    }\n\n    const setRemoveCoin = () =>\n    {\n        if(count)\n        {\n            setCount(count - 100);\n            setLeftCoins(userCoins - count)\n        }\n        else{\n            alert(\"You have not enough coin\");\n        }\n\n    }\n\n    const setAddCoin = () =>{\n        if(count + 100 > userCoins)\n        {\n            alert(\"You have not enough coin\");\n        }\n        else{\n            setCount(count + 100)\n            setLeftCoins(userCoins - count)\n        }\n    }\n\n    return (\n        <div className=\"large-devices-margin\">\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n\n                            <Form onSubmit={getCoouponCodeStatus}>\n\n                            <h4>Enter Coupon Id</h4><span>if you have otherwise no need to submit</span>\n                            <p>\n                                <InputGroup className=\"mb-3\">\n                                    <FormControl\n                                        placeholder=\"XY123ABC\"\n                                        aria-label=\"Recipient's username\"\n                                        aria-describedby=\"basic-addon2\"\n                                        size=\"sm\"\n                                        onChange={(e)=>{setCoupon_code(e.target.value)}}\n                                    />\n                                    <Button type=\"submit\" variant=\"outline-warning\" id=\"button-addon2\" size=\"sm\">\n                                        Submit\n                                    </Button>\n                                </InputGroup>\n                                    {coupon_code_status == 3 ? <p>Your Code is right you are being discounted</p> : coupon_code_status == 2 ?  <p>Your Code is not right please try again</p>: null}\n                            </p>\n                            </Form>\n                            \n                            <div>\n                                <p>You have {count} coins and these coins value in tk : {count * 10} </p>\n                                <ButtonGroup aria-label=\"Basic example\">\n                                    <Button size=\"sm\" variant=\"danger\" onClick={setRemoveCoin}>-</Button>\n                                    <Button size=\"sm\" variant=\"warning\" onClick={setAddCoin}>+</Button>\n                                    <h5 className=\"ml-2\"> Left Coins : {leftCoins} </h5>\n                                </ButtonGroup>\n                            </div>\n\n\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h3>Shipping</h3>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            \n                            <h3>Payment Method</h3>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h3>Order Items</h3>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X &#2547; {item.offer_percentage ? parseFloat(item.price - ((item.price * item.offer_percentage) / 100)).toFixed(2) : item.price} = &#2547; {(item.qty * (item.offer_percentage ? parseFloat(item.price - ((item.price * item.offer_percentage) / 100)).toFixed(2) : item.price)).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4} >\n                    <Card className=\"mb-2 p-2 bg-warning\">\n                        <h3><i class=\"fas fa-coins\"></i> Total Coins :  {userCoins}</h3>\n                    </Card>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h3>Order Summary</h3>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>&#2547; {cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>&#2547; {cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>&#2547; {cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Coin Exchange:</Col>\n                                    <Col>&#2547; {29 < count ? count * 120 : 19 < count ? count * 110 : 9 < count ? count * 105 : count * 100}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                           {coupon_code_status == 3 ? coupon_discount : null}\n                            \n\n                            \n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>&#2547; {cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                    size=\"sm\"\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\UserListScreen.js",["378"],"import {React as useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\nimport AdminSideBar from '../admin_components/AdminSideBar'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div className=\"large-devices-margin\">\n            <h1>Users Screen</h1>\n            <Row>\n                <Col md={3}>\n                    <AdminSideBar/>\n\n                </Col>\n                <Col md={9}>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n                    </Col>\n                    </Row>\n        </div>\n    )\n}\n\nexport default UserListScreen\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ProductListScreen.js",["379"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\nimport AdminSideBar from '../admin_components/AdminSideBar'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    console.log(\"keyword : \", keyword);\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div className=\"large-devices-margin\">\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products Screen</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3 btn-sm' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={3}>\n                    <AdminSideBar/>\n                </Col>\n                <Col md={9}>\n               \n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>{product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n                     </Col>\n                     </Row>\n        </div>\n    )\n}\n\nexport default ProductListScreen","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\UserEditScreen.js",["380"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n        if(!user)\n        {\n            history.push('/login')\n        }\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (user && (!user.name || user._id !== Number(userId))) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user && user.name)\n                setEmail(user && user.email)\n                setIsAdmin(user && user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n                                    disabled\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                disabled\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\OrderListScreen.js",["381"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\nimport AdminSideBar from '../admin_components/AdminSideBar'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div className=\"large-devices-margin\">\n            <h1 >Orders Screen</h1>\n            <Row>\n                <Col md={3}>\n                    <AdminSideBar/>\n                </Col>\n                <Col>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm '>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n                    </Col>\n                    </Row>\n        </div>\n    )\n}\n\nexport default OrderListScreen","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\TopReviewProductScreen.js",["382"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts } from '../actions/productActions'\nimport ProductOffer from '../components/ProductOffer'\nimport Navs from '../components/Navs'\n\n\nfunction TopReviewProductScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n\n            {!keyword && <ProductOffer />}\n            <br></br>\n\n            <Navs />\n\n            <h4 className=\"mt-5\">Latest Laptops</h4>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {products.map(product => product.numReviews > 0 ? (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ) : null )}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n\n        </div>\n    )\n}\n\nexport default TopReviewProductScreen;\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\PricePredict.js",["383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403"],"import React, { useState } from 'react';\nimport Loader from '../components/Loader';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Row, Col, ListGroup, Image, Form, Button, Card, Container, CardDeck } from 'react-bootstrap'\nimport Product from '../components/Product';\nimport Rating from '../components/Rating';\n\n\n\nconst baseURL = \"http://127.0.0.1:8000/api/predict/\";\n\nfunction PricePredict() {\n\n\n    \n\n    const [loading, setLoading] = useState(false);\n\n    var [isTrue, setTrue] = useState(false);\n    const [predict, setPredict] = React.useState(null);\n    const [lepName, setLepName] = React.useState([]);\n    const [lepCompany, setLepCompany] = React.useState([]);\n    const [lepInches, setLepInches] = React.useState([]);\n    const [lepSR, setLepSR] = React.useState([]);\n    const [lepCpu, setLepCpu] = React.useState([]);\n    const [lepRam, setLepRam] = React.useState([]);\n    const [lepMemory, setLepMemory] = React.useState([]);\n    const [lepGpu, setLepGpu] = React.useState([]);\n    const [lepOS, setLepOS] = React.useState([]);\n    const [lepWeight, setLepWeight] = React.useState([]);\n    const [lepSSD, setLepSSD] = React.useState([]);\n    const [suggest_product, setSuggestProduct] = React.useState([]);\n\n\n\n\n\n\n    const [datas, setDatas] = useState(\n        {\n            lep_company: \"\",\n            lep_name: \"\",\n            lep_inches: \"\",\n            lep_screenResolution: \"\",\n            lep_cpu: \"\",\n            lep_ram: \"\",\n            lep_memory: \"\",\n            lep_gpu: \"\",\n            lep_opSys: \"\",\n            lep_weight: \"\",\n            lep_touchscreen: \"\",\n            lep_ips: \"\",\n            lep_ssd: \"\",\n\n        }\n    );\n\n    React.useEffect(() => {\n        setLoading(true)\n        axios.get(baseURL).then((response) => {\n            setLepCompany(response.data.lc);\n            setLepName(response.data.ltn);\n            setLepInches(response.data.li);\n            setLepSR(response.data.lsr);\n            setLepCpu(response.data.lcpu);\n            setLepRam(response.data.lram);\n            setLepMemory(response.data.lmr);\n            setLepGpu(response.data.lgpu);\n            setLepOS(response.data.lops);\n            setLepWeight(response.data.lw);\n            setLepSSD(response.data.ssd);\n            setLoading(false);\n\n        });\n    }, []);\n\n\n    const handleChange = e => {\n        setDatas({ ...datas, [e.target.name]: e.target.value })\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (datas.lep_name == \"\" || datas.lep_company == \"\" ||\n\n            datas.lep_inches == \"\" ||\n            datas.lep_screenResolution == \"\" ||\n            datas.lep_cpu == \"\" ||\n            datas.lep_ram == \"\" ||\n            datas.lep_memory == \"\" ||\n            datas.lep_gpu == \"\" ||\n            datas.lep_opSy == \"\" ||\n            datas.lep_weight == \"\" ||\n            datas.lep_touchscreen == \"\" ||\n            datas.lep_ips == \"\" ||\n            datas.lep_ssd == \"\"\n        ) {\n            window.alert(\"Fill up all informations\")\n            setTrue(false);\n        }\n        else {\n            setTrue(true);\n            setLoading(true);\n            axios.post(baseURL, {\n                datas\n            })\n                .then((response) => {\n                    setPredict(response.data.predict);\n                    setSuggestProduct(response.data.suggest_products);\n                });\n        }\n        setLoading(false);\n\n    }\n\n\n    if (isTrue) {\n\n        return (\n            <div>\n                <div className=\"large-devices-margin\">\n                    <Row>\n                        <Col md={3}>\n                            <Card className=\"bg-warning text-white p-2 mt-3\">\n                                <Card.Header>\n                                    <h3 className=\"text-white\">Predict A Laptop Price</h3>\n                                </Card.Header>\n                                <Card.Body>\n                                    Where Use ML algorithm to predict price of computer\n                                </Card.Body>\n                            </Card>\n                        </Col>\n\n                        <Col md={9}>\n            {loading ? <Loader/>:\n\n            <div>\n                <Row>\n\n\n                    <Col md={4}>\n                        <ul class=\"list-group\">\n\n                            \n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                Company\n                                <span class=\"badge badge-primary badge-pill\">{datas.lep_company}</span>\n                            </li>\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                Type\n                                <span class=\"badge badge-primary badge-pill\">{datas.lep_name}</span>\n                            </li>\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                Size\n                                <span class=\"badge badge-primary badge-pill\">{datas.lep_inches} inches</span>\n                            </li>\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                Screen Resolution\n                                <span class=\"badge badge-primary badge-pill\">{datas.lep_screenResolution}</span>\n                            </li>\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                SSD\n                                <span class=\"badge badge-primary badge-pill\">{datas.lep_ssd} gb</span>\n                            </li>\n                        </ul>\n                    </Col>\n                    <Col md={4}>\n                        <ul class=\"list-group\">\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                CPU\n                                <span class=\"badge badge-primary badge-pill\">{datas.lep_cpu}</span>\n                            </li>\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                RAM\n                                <span class=\"badge badge-primary badge-pill\">{datas.lep_ram} gb</span>\n                            </li>\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                HDD\n                                <span class=\"badge badge-primary badge-pill\">{datas.lep_memory} gb</span>\n                            </li>\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                SSD\n                                <span class=\"badge badge-primary badge-pill\">{datas.gpu}</span>\n                            </li>\n                           \n                            \n                        </ul>\n                    </Col>\n                    <Col md={4}>\n                        <ul class=\"list-group\">\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                OS\n                                <span class=\"badge badge-primary badge-pill\">{datas.lep_opSys}</span>\n                            </li>\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                Weight\n                                <span class=\"badge badge-primary badge-pill\">{datas.lep_weight} kg</span>\n                            </li>\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                Touch Screen\n                                <span class=\"badge badge-primary badge-pill\">{datas.lep_touchscreen}</span>\n                            </li>\n                            \n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                IPS\n                                <span class=\"badge badge-primary badge-pill\">{datas.lep_ips}</span>\n                            </li>\n                        </ul>\n                    </Col>\n\n\n                </Row>\n                <h3 className=\"text-center mt-5\"><bold>Predicted Price of laptop   <span class=\"badge badge-primary badge-pill\">&#2547; {predict + (predict / 2)}</span> </bold></h3>\n                \n            </div>\n            }\n            </Col>\n            </Row>\n            </div>\n\n            {/* sfdfd */}\n\n                <div className=\"large-devices-margin\">\n            \n\n                <h4 className=\"mt-5\">Suggest  Laptops</h4>\n                {loading ? <Loader />\n                \n                        :\n                        <div>\n                            <Row>\n                                {suggest_product && suggest_product.map(product => (product-10000) <= product && product <= (product + 10000) (\n                                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n\n\n                                        <Card className=\"my-3 p-3  rounded shadow\">\n                                            <strong className=\"ct\">{product.rating > 2 && product.numReviews > 0 ? <span class=\"badge badge-warning\"><i class=\"fas fa-star\"></i> TOP REVIEWED</span> : <br></br>}</strong>\n                                            <Link to={`/product/${product._id}`}>\n                                                <Card.Img src={product.image} className=\"img-fluid ps\" />\n                                            </Link>\n\n                                            <Card.Body>\n                                                <Link to={`/product/${product._id}`}>\n                                                    <Card.Title as=\"div\" >\n                                                        <strong >{product.name}</strong>\n                                                    </Card.Title>\n                                                </Link>\n\n                                                <Card.Text as=\"div\">\n                                                    <div className=\"my-3\">\n                                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                                    </div>\n                                                </Card.Text>\n\n\n                                                <Card.Text as=\"h5\">\n                                                    &#2547;{product.is_offer ? product.price - ((product.price * product.offer_percentage) / 100) : product.price}\n                                                    <br></br><span class=\"text-tl\">{product.is_offer ? '৳' + product.price : null}</span> {product.is_offer ? '-' + product.offer_percentage + '%' : <br></br>}\n                                                </Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                        \n\n\n\n\n\n\n                                    </Col>\n                                ))}\n                            </Row>\n                \n                        </div>\n                }\n               </div>\n\n\n\n\n\n            </div>\n\n        )\n    }\n    else {\n        console.log(isTrue);\n        return (\n\n                <Container fluid>\n                <Row>\n                    <Col md={3}>\n                        <Card className=\"bg-warning text-white p-2 mt-3\">\n                                <Card.Header>\n                                <h3 className=\"text-white\">Predict A Laptop Price</h3>\n                                </Card.Header>\n                            <Card.Body>\n                                Where Use ML algorithm to predict price of computer\n                            </Card.Body>\n                        </Card>\n                    </Col>\n\n                    <Col md={9}>\n\n                {loading ? <Loader /> :\n            \n            <form onSubmit={handleSubmit} >\n                <br></br>\n                <Row >\n                    <Col md={6}>\n                        <label for=\"exampleFormControlSelect1\">Company</label>\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"lep_company\" onChange={handleChange} >\n                            <option value=\"\">none</option>\n\n                            {\n                                lepCompany.map((p) =>\n                                    <option value={p}>{p}</option>\n                                )\n                            }\n                        </select>\n                    </Col>\n                    <Col md={6}>\n\n                        \n                        <label for=\"exampleFormControlSelect1\">Type</label>\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"lep_name\" onChange={handleChange} >\n                            <option value=\"\">none</option>\n\n                            {\n                                lepName.map((p) =>\n                                    <option value={p}>{p}</option>\n                                )\n                            }\n                        </select>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col md={6}>\n                        <br></br>\n                        <label for=\"exampleFormControlSelect1\">Screen Size(in Inches)</label>\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"lep_inches\" onChange={handleChange} >\n                            <option value=\"\">none</option>\n\n                            {\n                                lepInches.map((p) =>\n                                    <option value={p}>{p}</option>\n                                )\n                            }\n                        </select>\n                    </Col>\n\n                    <Col md={6}>\n                        <br></br>\n                        <label for=\"exampleFormControlSelect1\">Screen Resolution</label>\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"lep_screenResolution\" onChange={handleChange} >\n                            <option value=\"\">none</option>\n\n                            {\n                                lepSR.map((p) =>\n                                    <option value={p}>{p}</option>\n                                )\n                            }\n                        </select>\n                    </Col>\n                </Row>\n\n\n                <Row>\n                    <Col md={6}>\n                        <br></br>\n                        <label for=\"exampleFormControlSelect1\">CPU</label>\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"lep_cpu\" onChange={handleChange} >\n                            <option value=\"\">none</option>\n\n                            {\n                                lepCpu.map((p) =>\n                                    <option value={p}>{p}</option>\n                                )\n                            }\n                        </select>\n                    </Col>\n                    <Col md={6}>\n                        <br></br>\n                        <label for=\"exampleFormControlSelect1\">Ram Size(in GBs)</label>\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"lep_ram\" onChange={handleChange} >\n                            <option value=\"\">none</option>\n\n                            {\n                                lepRam.map((p) =>\n                                    <option value={p}>{p}</option>\n                                )\n                            }\n                        </select>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col md={6}>\n                        <br></br>\n                        <label for=\"exampleFormControlSelect1\">SSD Size(in GBs)</label>\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"lep_ssd\" onChange={handleChange} >\n                            <option value=\"\">none</option>\n\n                            {\n                                lepSSD.map((p) =>\n                                    <option value={p}>{p}</option>\n                                )\n                            }\n                        </select>\n                    </Col>\n                    <Col md={6}>\n                        <br></br>\n                        <label for=\"exampleFormControlSelect1\">HDD Size(in GBs)</label>\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"lep_memory\" onChange={handleChange} >\n                            <option value=\"\">none</option>\n\n                            {\n                                lepMemory.map((p) =>\n                                    <option value={p}>{p}</option>\n                                )\n                            }\n                        </select>\n                    </Col>\n\n                </Row>\n\n\n                <Row>\n                    <Col md={6}>\n                        <br></br>\n                        <label for=\"exampleFormControlSelect1\">Operating System</label>\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"lep_opSys\" onChange={handleChange} >\n                            <option value=\"\">none</option>\n\n                            {\n                                lepOS.map((p) =>\n                                    <option value={p}>{p}</option>\n                                )\n                            }\n                        </select>\n\n                    </Col>\n\n\n                    <Col md={6}>\n                        <br></br>\n                        <label for=\"exampleFormControlSelect1\">Gpu</label>\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"lep_gpu\" onChange={handleChange} >\n                            <option value=\"\">none</option>\n\n                            {\n                                lepGpu.map((p) =>\n                                    <option value={p}>{p}</option>\n                                )\n                            }\n                        </select>\n                    </Col>\n\n\n\n                </Row>\n\n                <Row>\n                    <Col md={6}>\n                        <br></br>\n                        <label for=\"exampleFormControlSelect1\">Touch Screen</label>\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"lep_touchscreen\" onChange={handleChange} >\n                            <option value=\"\">none</option>\n                            <option value=\"yes\">yes</option>\n                            <option value=\"no\">no</option>\n\n\n                        </select>\n                    </Col>\n                    <Col md={6}>\n                     <br></br>\n                        <label for=\"exampleFormControlSelect1\">IPS</label>\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"lep_ips\" onChange={handleChange} >\n                            <option value=\"\">none</option>\n                            <option value=\"yes\">yes</option>\n                            <option value=\"no\">no</option>\n\n\n                        </select>\n                    </Col>\n\n\n                </Row >\n\n\n                <br></br>\n                <label for=\"exampleFormControlSelect1\">Weight(in kg)</label>\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"lep_weight\" onChange={handleChange} >\n                    <option value=\"\">none</option>\n\n                    {\n                        lepWeight.map((p) =>\n                            <option value={p}>{p}</option>\n                        )\n                    }\n                </select>\n\n\n                <br></br>\n\n                <button className=\"btn btn-dark\" type=\"submit\">Predict</button>\n            </form>\n    }\n    </Col>\n    </Row>\n    </Container>\n  \n        )\n    }\n}\nexport default PricePredict;","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\CompareScreen.js",["404","405","406","407","408","409","410","411","412"],"import React, {initialState, useState, useEffect} from 'react';\nimport Loader from '../components/Loader';\nimport axios from 'axios';\nimport {Row, Col, Card} from 'react-bootstrap';\nimport {Link, Redirect} from 'react-router-dom';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport ProductCompareChart from '../components/ProductCompareChart';\n\n\nconst baseURL = \"http://127.0.0.1:8000/api/products/all/\";\n\nfunction CompareScreen(props){\n    const [prod, setProd] = useState(initialState);\n    const [loading, setLoading] = useState(false);\n    const [price_history1, set_price_history1] = useState(null);\n    const [price_history2, set_price_history2] = useState(null);\n    \n\n    useEffect( async () => {\n   \n\n        try {\n            setLoading(true);\n            axios.post(baseURL, { 'id_1': props.location.state.lep1, 'id_2': props.location.state.lep2}).then((response) => {\n                setProd(response.data.products);\n                set_price_history1(response.data.price_history1);\n                set_price_history2(response.data.price_history2);\n\n            });\n            setLoading(false);\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }, []);\n    return(\n        \n        <div className=\"large-devices-margin\">\n\n            {loading ? <Loader/>:\n            <div>\n          \n\n            {prod && (\n                <Row className=\"mt-2 mb-5\">\n                    \n                    <Col md={6}>\n                                <h3>Compare Two Laptops</h3>\n                                <ProductCompareChart price_history1={price_history1} price_history2={price_history2}/>\n                    </Col>\n                    <Col md={3}>\n                      \n                              \n                                    {props.location.state && prod.map((pr, index) => pr._id == props.location.state.lep1 ? (\n                        <div key={index}>\n                            <Link to={`/product/${pr._id}`}>\n                                <Card.Img src={pr.image} className=\"img-fluid cc\"/>\n                            </Link>\n                           <Card.Body>\n                                <h5 >Laptop_1: {pr.name}</h5>\n                                <hr></hr>\n                                                <p>Brand: {pr.brand}</p>\n                                                <hr></hr>\n                                                <p>Processor:  {pr.processor}</p>\n                                                <hr></hr>\n                                                <p>Display:  {pr.display}</p>\n                                                <hr></hr>\n                                                <p>Graphics:  {pr.graphics_card}</p>\n                                                <hr></hr>\n                                                <p>Ram:  {pr.ram_memory}</p>\n                                                <hr></hr>\n                                                <p>OS:  {pr.operating_system}</p>\n                                                <hr></hr>\n                                                <p>Storage:  {pr.storage}</p>\n                                                <hr></hr>\n                                                <p>Web Cam:  {pr.web_cam}</p>\n                                                <hr></hr>\n                                                <p> Color: {pr.color}</p>\n                                                <hr></hr>\n                                                <p>Battery:  {pr.battery}</p>\n                                                <hr></hr>\n                                                <p>Weight: {pr.weight}</p>\n                                                <hr></hr>\n                                                <p>Warranty:  {pr.warranty}</p>\n                                                <hr></hr>\n                                                   <p>Price: {pr.price}</p>\n                           </Card.Body>\n\n                        </div>\n                    ) : null )}\n                   \n                    </Col>\n                \n\n                    <Col md={3}>\n                     \n                                    {props.location.state && prod.map((pr, index) => pr._id == props.location.state.lep2 ? (\n                            <div key={index}>\n                                <Link to={`/product/${pr._id}`}>\n                                    <Card.Img src={pr.image} className=\"img-fluid cc\"/>\n                                </Link>\n                                <Card.Body>\n                                                <h5>Laptop_2: {pr.name}</h5>\n                                                <hr></hr>\n                                                <p>Brand:  {pr.brand}</p>\n                                                <hr></hr>\n                                                <p>Processor:  {pr.processor}</p>\n                                                <hr></hr>\n                                                <p>Display:  {pr.display}</p>\n                                                <hr></hr>\n                                                <p>Graphics:  {pr.graphics_card}</p>\n                                                <hr></hr>\n                                                <p>Ram:  {pr.ram_memory}</p>\n                                                <hr></hr>\n                                                <p>OS:  {pr.operating_system}</p>\n                                                <hr></hr>\n                                                <p>Storage:  {pr.storage}</p>\n                                                <hr></hr>\n                                                <p>Web Cam:  {pr.web_cam}</p>\n                                                <hr></hr>\n                                                <p> Color: {pr.color}</p>\n                                                <hr></hr>\n                                                <p>Battery:  {pr.battery}</p>\n                                                <hr></hr>\n                                                <p>Weight: {pr.weight}</p>\n                                                <hr></hr>\n                                                <p>Warranty:  {pr.warranty}</p>\n                                                <hr></hr>\n                                                <p>Price: {pr.price}</p>\n                                </Card.Body>\n\n                            </div>\n                        ) : null)}\n               \n                    </Col>\n\n                </Row>\n            )}\n            </div>\n            }\n\n        </div>\n    )\n}\nexport default CompareScreen;","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\PriceRangeScreen.js",["413","414"],"import React, { initialState, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport Loader from '../components/Loader';\nimport { Row, Col, Container } from 'react-bootstrap'\nimport Product from '../components/Product'\n\n\nconst baseURL = \"http://127.0.0.1:8000/api/products/all/\";\n\nconst PriceRangeScreen = () =>{\n    const [value, setValue] = useState(100000);\n    const [p, setP] = useState(initialState);\n    const [element, setElement] = useState(initialState);\n    const [loading, setLoading] = useState(false);\n\n    const rangeSelector = (event, newValue) => {\n        setValue(newValue);\n        console.log(newValue)\n        setLoading(true);\n        setElement(10);\n        setLoading(false);\n        \n    };\n\n    useEffect(async () => {\n        try {\n    \n            axios.get(baseURL).then((response) => {\n                setP(response.data)\n\n            });\n           \n          \n        }\n        catch (error) {\n            console.log(error);\n        }\n    }, []);\n\n\n\n    return (\n        <Container>\n        <div>\n            {loading ? <Loader/>:\n            <div>\n                <h4 classNmae=\"mt-2\">Search Price Range</h4>\n                <h1>\n        <RangeSlider\n           \n            max=\"300000\"\n            min=\"10000\"\n            tooltip=\"on\"\n            onChange={rangeSelector}\n            size=\"lg\"\n        >\n            </RangeSlider>\n            </h1>\n            \n        <h3>Price Range (10000 to {value}) TK</h3>\n                    <Row>\n                        {p && p.map(product => product.price <= value ? (\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                <Product product={product} />\n                            </Col>\n                        ) : null)}\n                    </Row>\n        \n        </div>\n            }\n\n\n       \n    \n        </div>\n        </Container>\n    );\n\n}\n\nexport default PriceRangeScreen;","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\DashboardScreen.js",["415","416","417","418"],"import {React, useState, useEffect} from 'react';\nimport {Row, Col, Card} from 'react-bootstrap';\nimport AdminSideBar from '../admin_components/AdminSideBar';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport Todolist from '../admin_components/Todolist';\nimport PieCharts from '../admin_components/PieCharts';\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios';\n\nconst baseURL = \"http://127.0.0.1:8000/api/products/dashboard/\";\n\n\n\n\n\n\nconst DashboardScreen = ({history}) =>{\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n    const [newCustomers, setNewCustomers] = useState(0);\n    const [pendingOrders, setPendingOrders] = useState(0);\n    const [revenue, setRevenue] = useState(0);\n    const [error, setError] = useState(false);\n    const [profit, setProfit] = useState(null);\n\n    useEffect(() => {\n\n        if (!userInfo) {\n                history.push('/login')\n        }\n        else{\n            if(!userInfo.isAdmin)\n            {\n                history.push('/')\n            }\n            axios.get(baseURL).then(response=>{\n                setNewCustomers(response.data.new_users);\n                setPendingOrders(response.data.pending_orders);\n                setRevenue(response.data.revenue);\n                setProfit(response.data.profit);\n            })\n        }\n\n    }, [history, userInfo])\n\n    const data = profit;\n    console.log(\"####\",   data);\n\n\n    const renderLineChart = (\n        <LineChart width={600} height={300} data={data} margin={{ top: 5, right: 20, bottom: 5, left: 10 }}>\n            <Line type=\"monotone\" dataKey=\"profit\" stroke=\"#8884d8\" />\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"year\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"red\" />\n            <Line type=\"monotone\" dataKey=\"expenses\" stroke=\"black\" />\n            <Tooltip />\n        </LineChart>\n    );\n\n\n    return(\n        <div className=\"large-devices-margin\">\n            <h3>Dashboard SCreen</h3>\n            <Row>\n                <Col md={3}>\n                    <AdminSideBar/>\n                </Col>\n                <Col md={5}>           \n                    <Card\n                        bg=\"danger\"\n                        className=\"mb-2 text-white text-center\"\n                    >\n                        <Card.Header className=\"nav-text\"><i class=\"fas fa-money-check \"></i> Revenue</Card.Header>\n                        <Card.Body>\n                            <Card.Title>{revenue} </Card.Title>\n    \n                        </Card.Body>\n                    </Card>     \n                    <hr></hr>\n                    <div style={{marginBottom: \"100px\"}}>\n\n                    </div>\n                \n                    <h3 className=\"text-danger\">Past few years profit graph</h3>\n                    <div>{renderLineChart}</div>\n                    <div style={{ marginBottom: \"100px\" }}>\n\n                    </div>\n                    <Todolist/>\n\n                </Col>\n                <Col md={2}>\n                    <Card\n                        bg=\"info\"\n                        className=\"mb-2 text-white text-center\"\n                    >\n                        <Card.Header className=\"nav-text\"><i class=\"fas fa-shopping-cart\"></i> Pending Orders </Card.Header>\n                        <Card.Body>\n                            <Card.Title>{pendingOrders} </Card.Title>\n                \n                        </Card.Body>\n                    </Card>\n                    <hr></hr>\n               \n                </Col>\n                <Col md={2}>\n                    <Card\n                        bg=\"dark\"\n                        className=\"mb-2 text-white text-center\"\n                    >\n                        <Card.Header className=\"nav-text\"><i class=\"fas fa-users\"></i> New Customers</Card.Header>\n                        <Card.Body>\n                            <Card.Title>{newCustomers} </Card.Title>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n              \n            </Row>\n        </div>\n    )\n}\n\nexport default DashboardScreen;","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ContactScreen.js",["419","420","421"],"import { React, useState} from 'react';\nimport {Row, Col} from 'react-bootstrap'\n\nfunction Contact()\n{\n    const [contact, setContact] = useState(\n        {\n            f_name: \"\",\n            l_name: \"\",\n            a_code: \"\",\n            tel_p: \"\",\n            email: \"\",\n            need_contact: \"\",\n            c_type: \"\",\n            message: \"\",\n\n        }\n    )\n    \n\n    return(\n        <div className=\"container\">\n                <h1>Contact Screen</h1>\n           <Row>\n                <Col md={6} className=\"bg-dark p-4 text-white\">\n                    <h5 className=\"text-white\">Our Address</h5>\n                    <address>\n                        121, Zindabazar<br></br>\n                        Sylhet, Sylhet<br></br>\n                        Bangladesh<br></br>\n                        <i class=\"fa fa-phone\"></i>: +852 1234 5678<br></br>\n                        <i class=\"fa fa-fax\"></i>: +852 8765 4321<br></br>\n                        <i class=\"fa fa-envelope\"></i>:\n                        <a href=\"mailto:mac@gmail.com\" className=\"text-white\">mac@gmail.com</a>\n                    </address>\n                    <div class=\"btn-group\" role=\"group\">\n                        <a role=\"button\" class=\"btn btn-warning\" href=\"tel:+85212345678\"><i class=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" class=\"btn btn-info\"><i class=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" class=\"btn btn-success\" href=\"mailto:mac@gmail.com\"><i class=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </Col>\n                \n               \n               \n           </Row>\n           <hr></hr>\n          \n        \n        </div>\n    )\n}\n\nexport default Contact;","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\RegisterScreen2.js",["422","423","424","425","426","427","428","429","430","431"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\nimport axios from 'axios'\n\nconst baseURL = \"http://127.0.0.1:8000/api/users/temp_register/\";\n\nfunction RegisterScreen2({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [mobile, setMobile] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n    const [isOk, setIsOk] = useState(false);\n    const [data_tkn, setData_tkn] = useState(null);\n    const [error, setError] = useState(null);\n    const [loading, setLoadding] = useState(false)\n    const [success, setSuccess] = useState(false);\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n\n    useEffect(() => {\n        if (success) {\n            history.push('/otp_screen');\n        }\n    }, [success]);\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setError('Passwords do not match')\n        } else {\n            //dispatch(register(name, email, password, mobile))\n            setLoadding(true)\n    \n                axios.post(baseURL, {\n                    name,\n                    email,\n                    mobile,\n                    password\n\n                }).then((response) => {\n                    setData_tkn(response.data);\n                    localStorage.setItem('data_tkn', response.data);\n                    setSuccess(true);\n                    \n                }).catch(error =>{\n                    setError(error.response.data);\n                })\n               \n            \n            setLoadding(false)\n            \n        }\n       \n\n    }\n\n    return (\n\n        <FormContainer>\n            <div className=\"card p-4\">\n                <h1>Register</h1>\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='mobile'>\n                        <Form.Label>Mobile</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='text'\n                            placeholder='019*******'\n                            value={mobile}\n                            onChange={(e) => setMobile(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button size=\"sm\" type='submit' variant='primary' className=\"btn-block mt-4\">\n                        Register\n                    </Button>\n\n                </Form>\n\n                <Row className='py-3'>\n                    <Col>\n                        Have an Account? <Link\n                            to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                            Sign In\n                        </Link>\n                    </Col>\n                </Row>\n            </div>\n        </FormContainer >\n\n    )\n}\n\nexport default RegisterScreen2;\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\OTPScreen.js",["432"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction OTPScreen({ location, history }) {\n\n    const [otp, setOtp] = useState('')\n    const [email, setEmail] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (localStorage.getItem('data_tkn'))\n        {\n            setEmail(localStorage.getItem('data_tkn'));\n        }\n        if (userInfo) {\n            localStorage.removeItem('data_tkn');\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n            dispatch(register(otp, email))\n    }\n\n    return (\n\n        <FormContainer>\n            <div className=\"card p-3\">\n                <h1>Otp</h1>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='otp'>\n                        <Form.Label>Otp</Form.Label>\n                        <Form.Control\n                            required\n                            type='text'\n                            placeholder='Enter otp'\n                            onChange={(e) => setOtp(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <Button type='submit' variant='primary' size=\"sm\">\n                        Submit\n                    </Button>\n\n                </Form>\n\n                <Row className='py-3'>\n                    <Col>\n                        Have an Account? <Link\n                            to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                            Sign In\n                        </Link>\n                    </Col>\n                </Row>\n            </div>\n        </FormContainer >\n\n    )\n}\n\nexport default OTPScreen;\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ProductEditScreen.js",["433","434","435","436"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n    \n    const [category, setCategory] = useState('')\n    const [brand, setBrand] = useState('')\n    const [name, setName] = useState('')\n    const [model, setModel] = useState('')\n    const [processor, setProcessor] = useState('')\n    const [display, setDisplay] = useState('')\n    const [graphics_card, setGraphics_card] = useState('')\n    const [ram_memory, setRam_memory] = useState('')\n    const [storage, setStorage] = useState('')\n    const [operating_system, setOperating_system] = useState('')\n    const [web_cam, setWeb_cam] = useState('')\n    const [weight, setWeight] = useState('')\n    const [color, setColor] = useState('')\n    const [battery, setBattery] = useState('')\n    const [warranty, setWarranty] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [image2, setImage2] = useState('')\n    const [image3, setImage3] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [is_offer, setIsOffer] = useState('')\n    const [offer_percentage, setOfferPercentage] = useState(0)\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n\n    useEffect(() => {\n        console.log(history)\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setCategory(product.category)\n                setBrand(product.brand)\n                setName(product.name)\n                setModel(product.model)\n                setProcessor(product.processor)\n                setGraphics_card(product.graphics_card)\n                setRam_memory(product.ram_memory)\n                setStorage(product.storage)\n                setOperating_system(product.operating_system)\n                setWeb_cam(product.web_cam)\n                setWeight(product.weight)\n                setColor(product.color)\n                setBattery(product.battery)\n                setWarranty(product.warranty)\n                setPrice(product.price)\n                setImage(product.image)\n                setImage2(product.image2)\n                setImage3(product.image3)\n                \n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n                setIsOffer(product.is_offer)\n                setOfferPercentage(product.offer_percentage)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (is_offer == 'True' && offer_percentage >= 0) {\n            alert(\"something went wrong\");\n            return;\n        }\n        dispatch(updateProduct({\n            _id: productId,\n            category,\n            brand,\n            name,\n            model,\n            processor,\n            display,\n            graphics_card,\n            ram_memory,\n            storage,\n            operating_system,\n            web_cam,\n            weight,\n            color,\n            battery,\n            warranty,\n            price,\n            image,\n            image2,\n            image3,\n            countInStock,\n            description,\n            is_offer,\n            offer_percentage,\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    const uploadFileHandler2 = async (e) => {\n\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image2', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n            setImage2(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    const uploadFileHandler3 = async (e) => {\n\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image3', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n            setImage3(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/productlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='category'>\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter category'\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='brand'>\n                                <Form.Label>Brand</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter brand'\n                                    value={brand}\n                                    onChange={(e) => setBrand(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='model'>\n                                <Form.Label>Model</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={model}\n                                    onChange={(e) => setModel(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='processor'>\n                                <Form.Label>Processor</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter Processor'\n                                    value={processor}\n                                    onChange={(e) => setProcessor(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='display'>\n                                <Form.Label>Display</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter Display'\n                                    value={display}\n                                    onChange={(e) => setDisplay(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='graphics_card'>\n                                <Form.Label>Graphics Card</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter Graphics Card'\n                                    value={graphics_card}\n                                    onChange={(e) => setGraphics_card(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='ram_memory'>\n                                <Form.Label>Ram</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter Ram'\n                                    value={ram_memory}\n                                    onChange={(e) => setRam_memory(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                                <Form.Group controlId='storage'>\n                                <Form.Label>Storage</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter Storage'\n                                    value={storage}\n                                    onChange={(e) => setStorage(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='operating_system'>\n                                <Form.Label>Operating System</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter OS'\n                                    value={operating_system}\n                                    onChange={(e) => setOperating_system(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='web_cam'>\n                                <Form.Label>Web Cam</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter Web Cam'\n                                    value={web_cam}\n                                    onChange={(e) => setWeb_cam(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='weight'>\n                                <Form.Label>Weight</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter weight'\n                                    value={weight}\n                                    onChange={(e) => setWeight(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='color'>\n                                <Form.Label>Color</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter color'\n                                    value={color}\n                                    onChange={(e) => setColor(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='battery'>\n                                <Form.Label>Battery</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter battery'\n                                    value={battery}\n                                    onChange={(e) => setBattery(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='warranty'>\n                                <Form.Label>Warranty</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter Warranty'\n                                    value={warranty}\n                                    onChange={(e) => setWarranty(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n\n\n\n\n\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter image'\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.File\n                                    id='image-file'\n                                    label='Choose File'\n                                    onChange={uploadFileHandler}\n                                >\n\n                                </Form.File>\n                                <Form.File\n                                    id='image-file2'\n                                    label='Choose File'\n                                    onChange={uploadFileHandler2}\n                                >\n\n                                </Form.File>\n                                <Form.File\n                                    id='image-file3'\n                                    label='Choose File'\n                                    onChange={uploadFileHandler3}\n                                >\n\n                                </Form.File>\n                                {uploading && <Loader />}\n\n                            </Form.Group>\n\n\n                          \n                           \n\n                            <Form.Group controlId='countinstock'>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter stock'\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            \n\n                            <Form.Group controlId='description'>\n                                <Form.Label>Description</Form.Label>\n\n                                <CKEditor editor={ClassicEditor}\n                                    onChange={(e, editor) => setDescription(editor.getData())}\n                                />\n                                <div>\n                                    {ReactHtmlParser(description)}\n                                </div>\n                            </Form.Group>\n\n\n                            <Form.Group controlId='is_offer'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is AOffer'\n                                    checked={is_offer}\n                                    onChange={(e) => setIsOffer(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n\n\n                            <Form.Group controlId='offerPercentage'>\n                                <Form.Label>Offer Percentage</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter '\n                                    value={offer_percentage}\n                                    onChange={(e) => setOfferPercentage(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                            </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\ResetPassword.js",["437","438","439","440"],"import axios from 'axios';\nimport { React, useState, useEffect} from 'react';\nimport {Form, Row, Col, Button} from 'react-bootstrap';\n\nconst baseUrl = \"http://127.0.0.1:8000/api/users/resetPassword/\";\n\nconst ResetPassword = ({location, history}) =>{\n\n    const [success, setSuccess] = useState(3);\n    const [email, setEmail] = useState(null);\n    console.log(\"success : \", success);\n\n    useEffect(() => {\n        if(success != 3 && success == 1)\n        {\n            history.push('/otp_screen');\n        }    \n    }, [success])\n\n    const form_handeler = (e) =>{\n        e.preventDefault();\n\n        if(email)\n        {\n            axios.post(baseUrl, {email}).then(response => {\n                setEmail(response.data.email);\n                setSuccess(response.data.result)\n              //  localStorage.setItem('reset_email', response.data);\n\n            })\n\n        }\n\n    }\n\n\n\n\n\n    return(\n        <div className=\"large-devices-margin\">\n          \n                <Row>\n                    <Col sm={4}>\n                    </Col>\n                    <Col sm={4}>\n                        <Form onSubmit={form_handeler}>\n                        <h3>Reset Password</h3>\n                        {success == 3 ? null : <h5>This email is not registerd</h5>}\n                          <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            size=\"sm\"\n                            type='email'\n                            placeholder='Enter Email'\n                            onChange={(e)=> setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <Button type=\"submit\" size=\"sm\" className=\"btn-block\">Submit</Button>\n                    </Form>\n\n                    </Col>\n                    <Col sm={4}>\n                    </Col>\n                </Row>\n        \n\n        </div>\n    )\n}\nexport default ResetPassword;","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\AdminContactScreen.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\screens\\BrandScreen.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Product.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Message.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\ProductOffer2.js",["441","442"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport {Container} from 'react-bootstrap';\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listOfferProducts } from '../actions/productActions'\n\nfunction ProductOffer2() {\n    const dispatch = useDispatch()\n\n    const productOfferRated = useSelector(state => state.productOfferRated)\n    const { error, loading, products } = productOfferRated\n\n    useEffect(() => {\n        dispatch(listOfferProducts())\n    }, [dispatch])\n\n    return (loading ? <Loader />\n        : error\n            ? <Message variant='danger'>{error}</Message>\n            : (\n                <Carousel autoPlay=\"true\" infiniteLoop=\"true\" useKeyboardArrows=\"true\"  interval=\"1000\" stopOnHover=\"true\" className=\"br\" >\n                    \n                    {products.map(product => (\n                        <Link to={`/product/${product._id}`}>\n\n                        <div >\n                            \n                            <img src={product.image} />\n                            <p className=\"legend\"> <h6 className=\"text-white\">{product.name} real price (${product.price}) <br></br>offering price  ({product.offer_percentage}%) (${(product.price - (product.price * product.offer_percentage) / 100)}) </h6> </p>\n                        \n                        </div>\n                        </Link>\n\n                    ))}\n                   \n        \n                </Carousel>\n            )\n\n    )\n}\n\nexport default ProductOffer2\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\ProductOffer.js",["443"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image, Card } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listOfferProducts } from '../actions/productActions'\n\nfunction ProductOffer() {\n    const dispatch = useDispatch()\n\n    const productOfferRated = useSelector(state => state.productOfferRated)\n    const { error, loading, products } = productOfferRated\n\n    useEffect(() => {\n        dispatch(listOfferProducts())\n    }, [dispatch])\n\n    return (loading ? <Loader />\n        : error\n            ? <Message variant='danger'>{error}</Message>\n            : (  \n               \n                <Carousel pause='hover' className='bg-primary mt-4'>\n                    {products.map(product => (\n                        \n                        <Carousel.Item key={product._id}>\n                            <Link to={`/product/${product._id}`}>\n                                <Image src={product.image} alt={product.name} fluid/>\n                                <Carousel.Caption className='carousel.caption'>\n                                    <h4>{product.name} real price (${product.price}) <br></br>offering price  ({product.offer_percentage}%) (${(product.price - (product.price * product.offer_percentage) / 100)}) </h4>\n                                </Carousel.Caption>\n                            </Link>\n                        </Carousel.Item>\n                       \n                    ))}\n                </Carousel>\n            )\n\n    )\n}\n\nexport default ProductOffer\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Navs2.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Navs.js",["444","445","446","447"],"import React from 'react'\nimport {Nav, Link} from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nfunction Navs() {\n     \n    const history = useHistory();\n\n    const handleSelect = (eventKey) => {\n        if(eventKey == \"pricePredict\")\n        {\n            history.push(\"/pricePredict\");\n        }\n        if (eventKey == \"priceRange\")\n        {\n            history.push(\"/priceRange\");\n        }\n        if (eventKey == \"contact\") {\n            history.push(\"/contact\");\n        }\n        \n    }\n\n    return(\n        <div>\n\n\n            <Nav className=\"justify-content-center \" activeKey=\"/home\" >\n                <Nav.Item >\n                    <Nav.Link  eventKey=\"priceRange\" onSelect={handleSelect} style={{ fontSize: \"17px\" }}><i class=\"fas fa-star\"></i> PRICE RANGE</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link  eventKey=\"pricePredict\" onSelect={handleSelect} style={{ fontSize: \"17px\" }}><i class=\"fas fa-laptop-medical text-dark\"></i> PREDICT LAPTOP PRICE</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link  eventKey=\"contact\" onSelect={handleSelect} style={{ fontSize: \"17px\" }}><b><i class=\"fas fa-id-card-alt\"></i> CONTACT</b></Nav.Link>\n                </Nav.Item>\n            </Nav>\n            <p className=\"text-center mt-4 mb-4\">A laptop Store</p>\n            <hr></hr>\n            \n        </div>\n    )\n    \n}\n\nexport default Navs\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\CompareProduct.js",["448","449","450","451","452","453","454","455","456","457"],"import axios from 'axios';\nimport { React, useState, initialState, useEffect, context}from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {Card, Button} from 'react-bootstrap';\n\n\nconst baseURL = \"http://127.0.0.1:8000/api/products/all/\";\n\nconst CompareProduct = () =>{\n    const [productss, setProductss] = useState([])\n    const [isPC, setIsPC] = useState(false);\n    const [visible, setVisible] = useState(false);\n    const [gt, setGt] = useState({\n        laptop_1: \"\",\n        laptop_2: \"\",\n\n    });\n    \n    useEffect( async () => {\n        try{\n            axios.get(baseURL).then((response) => {\n                setProductss(response.data)\n            });\n            console.log(\"$$$$$$$$$$$$$$\", productss);\n        }\n        catch(error)\n        {\n            console.log(error);\n        }\n    }, []);\n\n\n\n\n    const handleChange = (e) =>{\n        console.log(productss)\n        setGt({ ...gt, [e.target.name]: e.target.value })  \n    \n    }\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        console.log(\"pro : \", productss)\n        \n        if(gt.laptop_1 == \"\" || gt.laptop_2 == \"\")\n        {\n            alert(\"You did not fill up both input field please try again\")\n        }\n        else if (gt.laptop_1 == gt.laptop_2) {\n            alert(\"Both Value Are Same. Please Try different value\");\n            //window.location.reload(false);\n        }\n        else{\n            setIsPC(true);\n            \n        }\n    }\n    if(isPC)\n    {\n        return(\n            <Redirect\n                to={{\n                    pathname: \"/compare\",\n                    state: { lep1: gt.laptop_1,\n                             lep2: gt.laptop_2,\n                           }\n                }}\n            />\n            )\n    }\n    else{\n\n    \n    return(\n        <form onSubmit={handleSubmit}>\n            <Card border=\"light\">\n                <Card.Header className=\"bg-warning\">Comparision Between 2 laptops</Card.Header>\n                <Card.Body>\n\n                        <label for=\"exampleFormControlSelect1\">Laptop1</label>\n                        <br></br>\n                        <select class=\"form-control-sm\" id=\"exampleFormControlSelect1\" name=\"laptop_1\" onChange={handleChange} fullWidth>\n                            <option value=\"\">none</option>\n                            {\n                                productss.map((p) =>\n                                    <option value={p._id}>{p.name}</option>\n                                )\n                            }\n\n                        </select>\n                        <br></br>\n                        <label for=\"exampleFormControlSelect1\" className=\"mt-3\">Leptop2</label>\n                        <br></br>\n                        <select class=\"form-control-sm\" id=\"exampleFormControlSelect1\" name=\"laptop_2\" onChange={handleChange} disabled={visible == true ? true : false}>\n                            <option value=\"\">none</option>\n                            {\n                                productss.map((p) =>\n                                    <option value={p._id}>{p.name}</option>\n                                )\n                            }\n\n\n                        </select>\n                        <br></br>\n                        <button type=\"submit\" className=\"btn btn-dark btn-sm br mt-3\">Comparison</button>\n            \n                </Card.Body>\n            </Card>\n        </form>\n    );\n    }\n}\nexport default CompareProduct;","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\SearchRam.js",["458","459"],"import React, { useState, useEffect } from 'react'\nimport { Button, Form, Row, Col } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchRAM() {\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    useEffect(()  => {\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } \n     \n    }, [keyword]);\n\n    const handleChange = (event) => {\n        setKeyword(event.target.value + 'RAM')\n\n    }\n\n    \n    return (\n\n\n        <Form.Group as={Row} className=\"mb-3\">\n            <h5>RAM</h5>\n\n            <Col sm={10} >\n\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Check\n                        required\n                        name=\"terms\"\n                        label=\"8 GB\"\n                        id=\"validationFormik0\"\n                        value=\"8\"\n                        defaultChecked= {keyword == null ? true : false}\n                        onChange={handleChange}\n                    />\n                </Form.Group>\n\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Check\n                        required\n                        name=\"terms\"\n                        label=\"12 GB\"\n                        id=\"validationFormik0\"\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Check\n                        required\n                        name=\"terms\"\n                        label=\"16 GB\"\n                        id=\"validationFormik0\"\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3 \">\n                    <Form.Check\n                        required\n                        name=\"terms\"\n                        label=\"32 GB\"\n                        id=\"validationFormik1\"\n                    />\n                </Form.Group>\n\n            </Col>\n        </Form.Group>\n\n\n    )\n}\n\nexport default SearchRAM;\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Coupon.js",["460","461","462","463","464"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listCoupons } from '../actions/productActions'\nimport Countdown from 'react-countdown';\n\nfunction Coupon() {\n    const dispatch = useDispatch()\n    const couponList = useSelector(state => state.couponList)\n    const { coupons, coupon_redemptions, loading, error } = couponList\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n    \n\n    useEffect(() => {\n    \n        dispatch(listCoupons());\n\n    }, [dispatch])\n\n    if (!couponList.coupons || !userLogin.userInfo) return null;\n\n    return (loading ? <Loader />\n        : error\n            ? <Message variant='danger'>{error}</Message>\n            : (\n                <div>\n                    \n                    \n                {\n                        coupon_redemptions.map(coupon => coupon.user_id == userInfo._id  ? (\n                            <>\n                                <Countdown date={coupon.redemption_date} className=\" h4\"/>\n                                \n                            <div className=\"h5 bg-dark p-2 text-white\">You are being discounted {coupon.total_discount} Tk. Coupon code is : {coupon.coupon_code} deadline : {coupon.redemption_date} </div>\n                    </>): null) \n                }\n                </div>\n            )\n\n    )\n}\n\nexport default Coupon\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\SearchSlider.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\SearchBrand.js",["465","466"],"import React, { useState, useEffect } from 'react'\nimport { Button, Form, Row, Col } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBrand() {\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    useEffect(() => {\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        }\n\n    }, [keyword]);\n\n    const handleChange = (event) => {\n        setKeyword(event.target.value + 'RAM')\n\n    }\n\n\n    return (\n\n\n        <Form.Group as={Row} className=\"mb-3\">\n            <h5>Brand</h5>\n\n            <Col sm={10} >\n\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Check\n                        required\n                        name=\"terms\"\n                        label=\"Apple\"\n                        id=\"validationFormik0\"\n                        value=\"8\"\n                        defaultChecked={keyword == null ? true : false}\n                        onChange={handleChange}\n                    />\n                </Form.Group>\n\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Check\n                        required\n                        name=\"terms\"\n                        label=\"Asus\"\n                        id=\"validationFormik0\"\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Check\n                        required\n                        name=\"terms\"\n                        label=\"Hp\"\n                        id=\"validationFormik0\"\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3 \">\n                    <Form.Check\n                        required\n                        name=\"terms\"\n                        label=\"Lenovo\"\n                        id=\"validationFormik1\"\n                    />\n                </Form.Group>\n\n            </Col>\n        </Form.Group>\n\n\n    )\n}\n\nexport default SearchBrand;\n","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\CoinTable.js",["467","468"],"import React from 'react';\nimport {Table, ListGroup, Card, Button} from 'react-bootstrap';\n\nconst CoinTable = () =>{\n    return(\n        <div >\n        \n            <Card className=\"shadow\">\n                <Card.Header className=\"text-center bg-dark text-white\">Coin Table</Card.Header>\n                <ListGroup variant=\"flush\" className=\"text-center\">\n                    <ListGroup.Item>Coin To Tk</ListGroup.Item>\n                    <ListGroup.Item>100 To 1000</ListGroup.Item>\n                    <ListGroup.Item>200 To 2000</ListGroup.Item>\n                    <ListGroup.Item>30 To 3000</ListGroup.Item>\n                    <ListGroup.Item>40 To 4000</ListGroup.Item>\n                </ListGroup>\n            </Card>\n        </div>\n    )\n}\n\nexport default CoinTable;","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\ProductCompareChart.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\constants\\contactConstants.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\actions\\userActions.js",["469"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n    \n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\n\n\nexport const register = (otp, email) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'otp': otp, 'email': email },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\actions\\productActions.js",["470"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n    PRODUCT_OFFER_REQUEST,\n    PRODUCT_OFFER_SUCCESS,\n    PRODUCT_OFFER_FAIL,\n\n    PRODUCT_COUPON_REQUEST,\n    PRODUCT_COUPON_SUCCESS,\n    PRODUCT_COUPON_FAIL\n\n} from '../constants/productConstants'\n\nexport const listCoupons = () => async (dispatch) => {\n    try{\n        dispatch({type: PRODUCT_COUPON_REQUEST})\n\n        const { data } = await axios.get(`/api/products/coupons/`)\n\n        dispatch(\n            {\n                type: PRODUCT_COUPON_SUCCESS,\n                payload: data\n\n            }\n        )\n    }\n    catch(error)\n    {\n        dispatch({\n            type: PRODUCT_COUPON_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n\n    }\n}\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listOfferProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_OFFER_REQUEST })\n\n        const { data } = await axios.get(`/api/products/offer/`)\n\n        dispatch({\n            type: PRODUCT_OFFER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_OFFER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\admin_components\\AdminSideBar.js",["471","472"],"import React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Nav, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport {Link, NavLink} from 'react-router-dom';\nimport { logout } from '../actions/userActions'\n\n\n\nconst SideBar = (history) => {\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n\n    return (\n        <>\n\n            <Nav className=\"col-md-12 d-none d-md-block bg-dark sidebar p-3 \">\n                <div className=\"sidebar-sticky \"></div>\n                <Nav.Item>\n                    \n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 mt-2 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/dashboard\"\n                        exact\n                    >\n                        <i class=\"fas fa-tachometer-alt\"></i> Dashboard\n                    </NavLink>\n                </Nav.Item>\n                <hr></hr>\n                <Nav.Item>\n       \n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 mt-2 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/admin/userlist\"\n                        exact\n                    >\n                        <i class=\"fas fa-users\"></i> Users\n                    </NavLink>\n                </Nav.Item>\n                <hr></hr>\n                <Nav.Item>\n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/brand\"\n                        exact\n                    >\n                        <i class=\"fab fa-bandcamp\"></i> Brands\n                    </NavLink>\n                </Nav.Item>\n                <hr></hr>\n                <Nav.Item>\n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/admin/productlist\"\n                        exact\n                    >\n                        <i class=\"fab fa-product-hunt\"></i> Products\n                    </NavLink>\n                </Nav.Item>\n\n                <hr></hr>\n                <Nav.Item>\n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/admin/orderlist\"\n                        exact\n                    >\n                        <i class=\"fab fa-first-order\"></i> Orders\n                    </NavLink>\n                </Nav.Item>\n                <hr></hr>\n                <Nav.Item>\n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/admin/contact\"\n                        exact\n                    >\n                        <i class=\"fas fa-file-signature\"></i> Contacts\n                    </NavLink>\n                </Nav.Item>\n                <hr></hr>\n                <Nav.Item>\n                    <Link\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\n                        activeClassName=\"is-active\"\n                        onClick={logoutHandler}\n                        to=\"/\"\n                        \n                    >\n                        <i class=\"fas fa-sign-out-alt\"></i> Logout\n                    </Link>\n                </Nav.Item>\n                \n                <div style={{marginBottom: \"1200px\"}}>\n\n                </div>\n            </Nav>\n\n        </>\n    );\n};\nconst AdminSideBar = withRouter(SideBar);\nexport default AdminSideBar;","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\admin_components\\Todolist.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\admin_components\\PieCharts.js",["473"],"import React from 'react';\nimport { ResponsiveContainer, PieChart, Pie } from 'recharts';\n\n\nconst PieCharts = () => {\n\n    // Sample data\n    const data = [\n        { name: 'Geeksforgeeks', students: 400 },\n        { name: 'Technical scripter', students: 700 },\n        { name: 'Geek-i-knack', students: 200 },\n        { name: 'Geek-o-mania', students: 1000 }\n    ];\n\n\n    return (\n        <PieChart width={700} height={700}>\n            <Pie data={data} dataKey=\"students\" outerRadius={250} fill=\"green\" />\n        </PieChart>\n\n    );\n}\n\nexport default PieCharts;","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\actions\\orderActions.js",["474","475","476"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\HP\\Downloads\\2023-master\\2023-master\\frontend\\src\\components\\ProductChart.js",["477","478"],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport {ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Legend, Tooltip} from 'recharts';\n\n// const pdata = [\n//     {\n//         name: 'Python',\n//         student: 13,\n//         fees: 10\n//     },\n//     {\n//         name: 'Java',\n//         student: 10,\n//         fees: 11\n//     },\n//     {\n//         name: 'Php',\n//         student: 20,\n//         fees: 12\n//     },\n//     {\n//         name: 'Java Script',\n//         student: 80,\n//         fees: 20\n//     },\n//     {\n//         name: 'Web',\n//         student: 100,\n//         fees: 80\n//     },\n//     {\n//         name: 'C++',\n//         student: 40,\n//         fees: 20\n//     }\n\n// ]\n\nconst ProductChart = (props) =>{\n\n    const pdata = props.price_history;\n   // console.log(\"####################\", props.product_id, props.price_history);\n\n\n    return(\n        <div className=\"mt-5 mb-5\">\n            <h4 className=\"mb-3 text-danger\">Latest Prices graph</h4>\n            <div className=\"mt-4\">\n            <ResponsiveContainer width=\"100%\" aspect={3}>\n                <LineChart data={pdata} width={500} height={300} margin={{top:5, right: 30, left:20, bottom: 5}}>\n                    <CartesianGrid/>\n                        <XAxis dataKey=\"createdAt\" interval={'preserveStartEnd'}/>\n                    <YAxis/>\n                    <Tooltip/>\n                        <Legend/>\n                    <Line dataKey=\"price\" stroke='red' activeDot={{r: 8}}/>\n                </LineChart>\n\n            </ResponsiveContainer>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductChart;",["479","480"],{"ruleId":"481","replacedBy":"482"},{"ruleId":"483","replacedBy":"484"},{"ruleId":"485","severity":1,"message":"486","line":1,"column":10,"nodeType":"487","messageId":"488","endLine":1,"endColumn":19},{"ruleId":"485","severity":1,"message":"489","line":26,"column":8,"nodeType":"487","messageId":"488","endLine":26,"endColumn":15},{"ruleId":"485","severity":1,"message":"490","line":2,"column":5,"nodeType":"487","messageId":"488","endLine":2,"endColumn":25},{"ruleId":"485","severity":1,"message":"491","line":3,"column":5,"nodeType":"487","messageId":"488","endLine":3,"endColumn":25},{"ruleId":"485","severity":1,"message":"492","line":4,"column":5,"nodeType":"487","messageId":"488","endLine":4,"endColumn":22},{"ruleId":"485","severity":1,"message":"493","line":1,"column":16,"nodeType":"487","messageId":"488","endLine":1,"endColumn":25},{"ruleId":"485","severity":1,"message":"494","line":1,"column":27,"nodeType":"487","messageId":"488","endLine":1,"endColumn":35},{"ruleId":"485","severity":1,"message":"495","line":3,"column":34,"nodeType":"487","messageId":"488","endLine":3,"endColumn":37},{"ruleId":"485","severity":1,"message":"486","line":2,"column":10,"nodeType":"487","messageId":"488","endLine":2,"endColumn":19},{"ruleId":"485","severity":1,"message":"494","line":1,"column":17,"nodeType":"487","messageId":"488","endLine":1,"endColumn":25},{"ruleId":"485","severity":1,"message":"486","line":3,"column":20,"nodeType":"487","messageId":"488","endLine":3,"endColumn":29},{"ruleId":"485","severity":1,"message":"496","line":3,"column":31,"nodeType":"487","messageId":"488","endLine":3,"endColumn":35},{"ruleId":"485","severity":1,"message":"497","line":3,"column":37,"nodeType":"487","messageId":"488","endLine":3,"endColumn":46},{"ruleId":"485","severity":1,"message":"498","line":8,"column":24,"nodeType":"487","messageId":"488","endLine":8,"endColumn":35},{"ruleId":"485","severity":1,"message":"499","line":9,"column":8,"nodeType":"487","messageId":"488","endLine":9,"endColumn":20},{"ruleId":"485","severity":1,"message":"500","line":14,"column":8,"nodeType":"487","messageId":"488","endLine":14,"endColumn":23},{"ruleId":"485","severity":1,"message":"501","line":15,"column":8,"nodeType":"487","messageId":"488","endLine":15,"endColumn":17},{"ruleId":"485","severity":1,"message":"502","line":17,"column":8,"nodeType":"487","messageId":"488","endLine":17,"endColumn":20},{"ruleId":"485","severity":1,"message":"503","line":18,"column":8,"nodeType":"487","messageId":"488","endLine":18,"endColumn":17},{"ruleId":"485","severity":1,"message":"504","line":19,"column":8,"nodeType":"487","messageId":"488","endLine":19,"endColumn":19},{"ruleId":"485","severity":1,"message":"505","line":6,"column":20,"nodeType":"487","messageId":"488","endLine":6,"endColumn":25},{"ruleId":"485","severity":1,"message":"506","line":12,"column":8,"nodeType":"487","messageId":"488","endLine":12,"endColumn":25},{"ruleId":"485","severity":1,"message":"507","line":13,"column":27,"nodeType":"487","messageId":"488","endLine":13,"endColumn":39},{"ruleId":"485","severity":1,"message":"508","line":13,"column":41,"nodeType":"487","messageId":"488","endLine":13,"endColumn":61},{"ruleId":"485","severity":1,"message":"509","line":13,"column":63,"nodeType":"487","messageId":"488","endLine":13,"endColumn":74},{"ruleId":"510","severity":1,"message":"511","line":112,"column":49,"nodeType":"512","endLine":112,"endColumn":76},{"ruleId":"510","severity":1,"message":"511","line":115,"column":45,"nodeType":"512","endLine":115,"endColumn":73},{"ruleId":"510","severity":1,"message":"511","line":118,"column":45,"nodeType":"512","endLine":118,"endColumn":73},{"ruleId":"513","severity":1,"message":"514","line":278,"column":84,"nodeType":"515","messageId":"516","endLine":278,"endColumn":86},{"ruleId":"513","severity":1,"message":"517","line":35,"column":22,"nodeType":"515","messageId":"516","endLine":35,"endColumn":24},{"ruleId":"485","severity":1,"message":"518","line":3,"column":34,"nodeType":"487","messageId":"488","endLine":3,"endColumn":38},{"ruleId":"485","severity":1,"message":"493","line":1,"column":27,"nodeType":"487","messageId":"488","endLine":1,"endColumn":36},{"ruleId":"485","severity":1,"message":"493","line":1,"column":27,"nodeType":"487","messageId":"488","endLine":1,"endColumn":36},{"ruleId":"485","severity":1,"message":"486","line":2,"column":29,"nodeType":"487","messageId":"488","endLine":2,"endColumn":38},{"ruleId":"485","severity":1,"message":"519","line":2,"column":10,"nodeType":"487","messageId":"488","endLine":2,"endColumn":14},{"ruleId":"485","severity":1,"message":"486","line":3,"column":41,"nodeType":"487","messageId":"488","endLine":3,"endColumn":50},{"ruleId":"485","severity":1,"message":"520","line":20,"column":12,"nodeType":"487","messageId":"488","endLine":20,"endColumn":21},{"ruleId":"513","severity":1,"message":"517","line":63,"column":22,"nodeType":"515","messageId":"516","endLine":63,"endColumn":24},{"ruleId":"521","severity":1,"message":"522","line":71,"column":8,"nodeType":"523","endLine":71,"endColumn":71,"suggestions":"524"},{"ruleId":"485","severity":1,"message":"525","line":20,"column":12,"nodeType":"487","messageId":"488","endLine":20,"endColumn":21},{"ruleId":"485","severity":1,"message":"526","line":20,"column":23,"nodeType":"487","messageId":"488","endLine":20,"endColumn":35},{"ruleId":"521","severity":1,"message":"527","line":36,"column":5,"nodeType":"487","endLine":36,"endColumn":14,"suggestions":"528"},{"ruleId":"521","severity":1,"message":"529","line":82,"column":8,"nodeType":"523","endLine":82,"endColumn":28,"suggestions":"530"},{"ruleId":"521","severity":1,"message":"531","line":82,"column":9,"nodeType":"523","endLine":82,"endColumn":27},{"ruleId":"513","severity":1,"message":"514","line":146,"column":57,"nodeType":"515","messageId":"516","endLine":146,"endColumn":59},{"ruleId":"513","severity":1,"message":"514","line":146,"column":136,"nodeType":"515","messageId":"516","endLine":146,"endColumn":138},{"ruleId":"513","severity":1,"message":"514","line":252,"column":48,"nodeType":"515","messageId":"516","endLine":252,"endColumn":50},{"ruleId":"485","severity":1,"message":"494","line":1,"column":18,"nodeType":"487","messageId":"488","endLine":1,"endColumn":26},{"ruleId":"485","severity":1,"message":"494","line":1,"column":17,"nodeType":"487","messageId":"488","endLine":1,"endColumn":25},{"ruleId":"521","severity":1,"message":"532","line":47,"column":8,"nodeType":"523","endLine":47,"endColumn":46,"suggestions":"533"},{"ruleId":"485","severity":1,"message":"494","line":1,"column":17,"nodeType":"487","messageId":"488","endLine":1,"endColumn":25},{"ruleId":"485","severity":1,"message":"494","line":1,"column":17,"nodeType":"487","messageId":"488","endLine":1,"endColumn":25},{"ruleId":"485","severity":1,"message":"534","line":3,"column":10,"nodeType":"487","messageId":"488","endLine":3,"endColumn":23},{"ruleId":"485","severity":1,"message":"535","line":5,"column":10,"nodeType":"487","messageId":"488","endLine":5,"endColumn":18},{"ruleId":"485","severity":1,"message":"497","line":7,"column":20,"nodeType":"487","messageId":"488","endLine":7,"endColumn":29},{"ruleId":"485","severity":1,"message":"505","line":7,"column":31,"nodeType":"487","messageId":"488","endLine":7,"endColumn":36},{"ruleId":"485","severity":1,"message":"496","line":7,"column":38,"nodeType":"487","messageId":"488","endLine":7,"endColumn":42},{"ruleId":"485","severity":1,"message":"536","line":7,"column":44,"nodeType":"487","messageId":"488","endLine":7,"endColumn":50},{"ruleId":"485","severity":1,"message":"537","line":7,"column":69,"nodeType":"487","messageId":"488","endLine":7,"endColumn":77},{"ruleId":"485","severity":1,"message":"538","line":8,"column":8,"nodeType":"487","messageId":"488","endLine":8,"endColumn":15},{"ruleId":"513","severity":1,"message":"514","line":86,"column":28,"nodeType":"515","messageId":"516","endLine":86,"endColumn":30},{"ruleId":"513","severity":1,"message":"514","line":86,"column":55,"nodeType":"515","messageId":"516","endLine":86,"endColumn":57},{"ruleId":"513","severity":1,"message":"514","line":88,"column":30,"nodeType":"515","messageId":"516","endLine":88,"endColumn":32},{"ruleId":"513","severity":1,"message":"514","line":89,"column":40,"nodeType":"515","messageId":"516","endLine":89,"endColumn":42},{"ruleId":"513","severity":1,"message":"514","line":90,"column":27,"nodeType":"515","messageId":"516","endLine":90,"endColumn":29},{"ruleId":"513","severity":1,"message":"514","line":91,"column":27,"nodeType":"515","messageId":"516","endLine":91,"endColumn":29},{"ruleId":"513","severity":1,"message":"514","line":92,"column":30,"nodeType":"515","messageId":"516","endLine":92,"endColumn":32},{"ruleId":"513","severity":1,"message":"514","line":93,"column":27,"nodeType":"515","messageId":"516","endLine":93,"endColumn":29},{"ruleId":"513","severity":1,"message":"514","line":94,"column":28,"nodeType":"515","messageId":"516","endLine":94,"endColumn":30},{"ruleId":"513","severity":1,"message":"514","line":95,"column":30,"nodeType":"515","messageId":"516","endLine":95,"endColumn":32},{"ruleId":"513","severity":1,"message":"514","line":96,"column":35,"nodeType":"515","messageId":"516","endLine":96,"endColumn":37},{"ruleId":"513","severity":1,"message":"514","line":97,"column":27,"nodeType":"515","messageId":"516","endLine":97,"endColumn":29},{"ruleId":"513","severity":1,"message":"514","line":98,"column":27,"nodeType":"515","messageId":"516","endLine":98,"endColumn":29},{"ruleId":"485","severity":1,"message":"535","line":5,"column":15,"nodeType":"487","messageId":"488","endLine":5,"endColumn":23},{"ruleId":"485","severity":1,"message":"539","line":6,"column":8,"nodeType":"487","messageId":"488","endLine":6,"endColumn":23},{"ruleId":"485","severity":1,"message":"507","line":6,"column":27,"nodeType":"487","messageId":"488","endLine":6,"endColumn":39},{"ruleId":"485","severity":1,"message":"508","line":6,"column":41,"nodeType":"487","messageId":"488","endLine":6,"endColumn":61},{"ruleId":"485","severity":1,"message":"509","line":6,"column":63,"nodeType":"487","messageId":"488","endLine":6,"endColumn":74},{"ruleId":"521","severity":1,"message":"540","line":19,"column":16,"nodeType":"541","endLine":35,"endColumn":6},{"ruleId":"521","severity":1,"message":"542","line":35,"column":8,"nodeType":"523","endLine":35,"endColumn":10,"suggestions":"543"},{"ruleId":"513","severity":1,"message":"514","line":54,"column":93,"nodeType":"515","messageId":"516","endLine":54,"endColumn":95},{"ruleId":"513","severity":1,"message":"514","line":97,"column":93,"nodeType":"515","messageId":"516","endLine":97,"endColumn":95},{"ruleId":"485","severity":1,"message":"544","line":14,"column":12,"nodeType":"487","messageId":"488","endLine":14,"endColumn":19},{"ruleId":"521","severity":1,"message":"540","line":26,"column":15,"nodeType":"541","endLine":39,"endColumn":6},{"ruleId":"485","severity":1,"message":"545","line":6,"column":8,"nodeType":"487","messageId":"488","endLine":6,"endColumn":17},{"ruleId":"485","severity":1,"message":"546","line":7,"column":10,"nodeType":"487","messageId":"488","endLine":7,"endColumn":21},{"ruleId":"485","severity":1,"message":"547","line":24,"column":12,"nodeType":"487","messageId":"488","endLine":24,"endColumn":17},{"ruleId":"485","severity":1,"message":"548","line":24,"column":19,"nodeType":"487","messageId":"488","endLine":24,"endColumn":27},{"ruleId":"485","severity":1,"message":"549","line":6,"column":12,"nodeType":"487","messageId":"488","endLine":6,"endColumn":19},{"ruleId":"485","severity":1,"message":"550","line":6,"column":21,"nodeType":"487","messageId":"488","endLine":6,"endColumn":31},{"ruleId":"551","severity":1,"message":"552","line":38,"column":25,"nodeType":"512","endLine":38,"endColumn":63},{"ruleId":"485","severity":1,"message":"553","line":4,"column":23,"nodeType":"487","messageId":"488","endLine":4,"endColumn":34},{"ruleId":"485","severity":1,"message":"554","line":8,"column":10,"nodeType":"487","messageId":"488","endLine":8,"endColumn":18},{"ruleId":"485","severity":1,"message":"555","line":20,"column":12,"nodeType":"487","messageId":"488","endLine":20,"endColumn":19},{"ruleId":"485","severity":1,"message":"556","line":20,"column":21,"nodeType":"487","messageId":"488","endLine":20,"endColumn":31},{"ruleId":"485","severity":1,"message":"557","line":21,"column":12,"nodeType":"487","messageId":"488","endLine":21,"endColumn":16},{"ruleId":"485","severity":1,"message":"558","line":21,"column":18,"nodeType":"487","messageId":"488","endLine":21,"endColumn":25},{"ruleId":"485","severity":1,"message":"559","line":22,"column":12,"nodeType":"487","messageId":"488","endLine":22,"endColumn":20},{"ruleId":"485","severity":1,"message":"560","line":27,"column":11,"nodeType":"487","messageId":"488","endLine":27,"endColumn":19},{"ruleId":"521","severity":1,"message":"522","line":36,"column":8,"nodeType":"523","endLine":36,"endColumn":17,"suggestions":"561"},{"ruleId":"513","severity":1,"message":"517","line":41,"column":22,"nodeType":"515","messageId":"516","endLine":41,"endColumn":24},{"ruleId":"485","severity":1,"message":"556","line":14,"column":21,"nodeType":"487","messageId":"488","endLine":14,"endColumn":31},{"ruleId":"485","severity":1,"message":"507","line":13,"column":27,"nodeType":"487","messageId":"488","endLine":13,"endColumn":39},{"ruleId":"485","severity":1,"message":"508","line":13,"column":41,"nodeType":"487","messageId":"488","endLine":13,"endColumn":61},{"ruleId":"485","severity":1,"message":"509","line":13,"column":63,"nodeType":"487","messageId":"488","endLine":13,"endColumn":74},{"ruleId":"513","severity":1,"message":"514","line":99,"column":22,"nodeType":"515","messageId":"516","endLine":99,"endColumn":24},{"ruleId":"513","severity":1,"message":"517","line":14,"column":20,"nodeType":"515","messageId":"516","endLine":14,"endColumn":22},{"ruleId":"513","severity":1,"message":"514","line":14,"column":36,"nodeType":"515","messageId":"516","endLine":14,"endColumn":38},{"ruleId":"521","severity":1,"message":"522","line":18,"column":8,"nodeType":"523","endLine":18,"endColumn":17,"suggestions":"562"},{"ruleId":"513","severity":1,"message":"514","line":49,"column":34,"nodeType":"515","messageId":"516","endLine":49,"endColumn":36},{"ruleId":"485","severity":1,"message":"486","line":6,"column":9,"nodeType":"487","messageId":"488","endLine":6,"endColumn":18},{"ruleId":"510","severity":1,"message":"511","line":32,"column":29,"nodeType":"512","endLine":32,"endColumn":56},{"ruleId":"485","severity":1,"message":"518","line":4,"column":27,"nodeType":"487","messageId":"488","endLine":4,"endColumn":31},{"ruleId":"485","severity":1,"message":"519","line":2,"column":14,"nodeType":"487","messageId":"488","endLine":2,"endColumn":18},{"ruleId":"513","severity":1,"message":"514","line":9,"column":21,"nodeType":"515","messageId":"516","endLine":9,"endColumn":23},{"ruleId":"513","severity":1,"message":"514","line":13,"column":22,"nodeType":"515","messageId":"516","endLine":13,"endColumn":24},{"ruleId":"513","severity":1,"message":"514","line":17,"column":22,"nodeType":"515","messageId":"516","endLine":17,"endColumn":24},{"ruleId":"485","severity":1,"message":"563","line":2,"column":27,"nodeType":"487","messageId":"488","endLine":2,"endColumn":39},{"ruleId":"485","severity":1,"message":"564","line":2,"column":52,"nodeType":"487","messageId":"488","endLine":2,"endColumn":59},{"ruleId":"485","severity":1,"message":"536","line":4,"column":15,"nodeType":"487","messageId":"488","endLine":4,"endColumn":21},{"ruleId":"485","severity":1,"message":"565","line":12,"column":21,"nodeType":"487","messageId":"488","endLine":12,"endColumn":31},{"ruleId":"521","severity":1,"message":"540","line":19,"column":16,"nodeType":"541","endLine":30,"endColumn":6},{"ruleId":"521","severity":1,"message":"566","line":30,"column":8,"nodeType":"523","endLine":30,"endColumn":10,"suggestions":"567"},{"ruleId":"513","severity":1,"message":"514","line":44,"column":24,"nodeType":"515","messageId":"516","endLine":44,"endColumn":26},{"ruleId":"513","severity":1,"message":"514","line":44,"column":45,"nodeType":"515","messageId":"516","endLine":44,"endColumn":47},{"ruleId":"513","severity":1,"message":"514","line":48,"column":30,"nodeType":"515","messageId":"516","endLine":48,"endColumn":32},{"ruleId":"513","severity":1,"message":"514","line":93,"column":146,"nodeType":"515","messageId":"516","endLine":93,"endColumn":148},{"ruleId":"485","severity":1,"message":"536","line":2,"column":10,"nodeType":"487","messageId":"488","endLine":2,"endColumn":16},{"ruleId":"521","severity":1,"message":"522","line":15,"column":8,"nodeType":"523","endLine":15,"endColumn":17,"suggestions":"568"},{"ruleId":"485","severity":1,"message":"519","line":3,"column":10,"nodeType":"487","messageId":"488","endLine":3,"endColumn":14},{"ruleId":"485","severity":1,"message":"569","line":4,"column":10,"nodeType":"487","messageId":"488","endLine":4,"endColumn":18},{"ruleId":"485","severity":1,"message":"505","line":4,"column":20,"nodeType":"487","messageId":"488","endLine":4,"endColumn":25},{"ruleId":"485","severity":1,"message":"570","line":13,"column":13,"nodeType":"487","messageId":"488","endLine":13,"endColumn":20},{"ruleId":"513","severity":1,"message":"514","line":34,"column":73,"nodeType":"515","messageId":"516","endLine":34,"endColumn":75},{"ruleId":"485","severity":1,"message":"536","line":2,"column":10,"nodeType":"487","messageId":"488","endLine":2,"endColumn":16},{"ruleId":"521","severity":1,"message":"522","line":15,"column":8,"nodeType":"523","endLine":15,"endColumn":17,"suggestions":"571"},{"ruleId":"485","severity":1,"message":"572","line":2,"column":9,"nodeType":"487","messageId":"488","endLine":2,"endColumn":14},{"ruleId":"485","severity":1,"message":"536","line":2,"column":33,"nodeType":"487","messageId":"488","endLine":2,"endColumn":39},{"ruleId":"485","severity":1,"message":"573","line":21,"column":5,"nodeType":"487","messageId":"488","endLine":21,"endColumn":30},{"ruleId":"485","severity":1,"message":"574","line":171,"column":17,"nodeType":"487","messageId":"488","endLine":171,"endColumn":21},{"ruleId":"485","severity":1,"message":"553","line":2,"column":23,"nodeType":"487","messageId":"488","endLine":2,"endColumn":34},{"ruleId":"485","severity":1,"message":"536","line":3,"column":15,"nodeType":"487","messageId":"488","endLine":3,"endColumn":21},{"ruleId":"485","severity":1,"message":"575","line":2,"column":10,"nodeType":"487","messageId":"488","endLine":2,"endColumn":29},{"ruleId":"485","severity":1,"message":"576","line":14,"column":5,"nodeType":"487","messageId":"488","endLine":14,"endColumn":20},{"ruleId":"485","severity":1,"message":"577","line":19,"column":5,"nodeType":"487","messageId":"488","endLine":19,"endColumn":24},{"ruleId":"485","severity":1,"message":"578","line":28,"column":5,"nodeType":"487","messageId":"488","endLine":28,"endColumn":24},{"ruleId":"485","severity":1,"message":"546","line":2,"column":10,"nodeType":"487","messageId":"488","endLine":2,"endColumn":21},{"ruleId":"485","severity":1,"message":"553","line":2,"column":23,"nodeType":"487","messageId":"488","endLine":2,"endColumn":34},{"ruleId":"481","replacedBy":"579"},{"ruleId":"483","replacedBy":"580"},"no-native-reassign",["581"],"no-negated-in-lhs",["582"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Header2' is defined but never used.","'CONTACT_LIST_REQUEST' is defined but never used.","'CONTACT_LIST_SUCCESS' is defined but never used.","'CONTACT_LIST_FAIL' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","'ListGroup' is defined but never used.","'listCoupons' is defined but never used.","'ProductOffer' is defined but never used.","'ProductCarousel' is defined but never used.","'SearchRAM' is defined but never used.","'SearchSlider' is defined but never used.","'CoinTable' is defined but never used.","'SearchBrand' is defined but never used.","'Image' is defined but never used.","'ReactImageMagnify' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Card' is defined but never used.","'Link' is defined but never used.","'userCoins' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["583"],"'coinPrice' is assigned a value but never used.","'setCoinPrice' is assigned a value but never used.","React Hook useEffect contains a call to 'setUser_id'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [userInfo._id, userCoins] as a second argument to the useEffect Hook.",["584"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'order._id', and 'success'. Either include them or remove the dependency array.",["585"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["586"],"'LinkContainer' is defined but never used.","'Redirect' is defined but never used.","'Button' is defined but never used.","'CardDeck' is defined but never used.","'Product' is defined but never used.","'ReactHtmlParser' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'props.location.state.lep1' and 'props.location.state.lep2'. Either include them or remove the dependency array.",["587"],"'element' is assigned a value but never used.","'PieCharts' is defined but never used.","'useDispatch' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'contact' is assigned a value but never used.","'setContact' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useSelector' is defined but never used.","'register' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'isOk' is assigned a value but never used.","'setIsOk' is assigned a value but never used.","'data_tkn' is assigned a value but never used.","'dispatch' is assigned a value but never used.",["588"],["589"],"'initialState' is defined but never used.","'context' is defined but never used.","'setVisible' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'productss'. Either include it or remove the dependency array.",["590"],["591"],"'Carousel' is defined but never used.","'coupons' is assigned a value but never used.",["592"],"'Table' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'data' is assigned a value but never used.","'ResponsiveContainer' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.",["581"],["582"],"no-global-assign","no-unsafe-negation",{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"603","fix":"605"},{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"608","fix":"610"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"611","text":"612"},"Add dependencies array: [userInfo._id, userCoins]",{"range":"613","text":"614"},"Update the dependencies array to be: [dispatch, history, order._id, success]",{"range":"615","text":"616"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"617","text":"618"},"Update the dependencies array to be: [props.location.state.lep1, props.location.state.lep2]",{"range":"619","text":"620"},"Update the dependencies array to be: [history, success]",{"range":"621","text":"622"},{"range":"623","text":"622"},"Update the dependencies array to be: [productss]",{"range":"624","text":"625"},"Update the dependencies array to be: [history, keyword]",{"range":"626","text":"627"},{"range":"628","text":"627"},[2306,2369],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[2032,2032],", [userInfo._id, userCoins]",[3005,3025],"[dispatch, history, order._id, success]",[1539,1577],"[user, userId, successUpdate, history, dispatch]",[1250,1252],"[props.location.state.lep1, props.location.state.lep2]",[1290,1299],"[history, success]",[520,529],[819,821],"[productss]",[384,393],"[history, keyword]",[379,388]]